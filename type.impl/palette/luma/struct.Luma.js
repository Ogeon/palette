(function() {var type_impls = {
"palette":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#54-102\">source</a><a href=\"#impl-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#56-61\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/luma/struct.Luma.html#tymethod.new\" class=\"fn\">new</a>(luma: T) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a luminance color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#64-72\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U&gt;(self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#75-80\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U&gt;(color: <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, U&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#83-85\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T,)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(luma,)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#88-90\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.from_components\" class=\"fn\">from_components</a>((luma): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T,)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(luma,)</code> tuple.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#104-117\">source</a><a href=\"#impl-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_luma\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#109-111\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.min_luma\" class=\"fn\">min_luma</a>() -&gt; T</h4></section></summary><div class=\"docblock\"><p>Return the <code>luma</code> value minimum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_luma\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#114-116\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.max_luma\" class=\"fn\">max_luma</a>() -&gt; T</h4></section></summary><div class=\"docblock\"><p>Return the <code>luma</code> value maximum.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#119-175\">source</a><a href=\"#impl-Luma%3CS,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_u16\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#141-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.into_u16\" class=\"fn\">into_u16</a>&lt;O&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a><div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\">Lumaa</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert to a packed <code>u16</code> with with specifiable component order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{luma, SrgbLuma};\n\n<span class=\"kw\">let </span>integer = SrgbLuma::new(<span class=\"number\">96u8</span>).into_u16::&lt;luma::channels::La&gt;();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x60FF</span>, integer);</code></pre></div>\n<p>It’s also possible to use <code>From</code> and <code>Into</code>, which defaults to the\n<code>0xAALL</code> component order:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::SrgbLuma;\n\n<span class=\"kw\">let </span>integer = u16::from(SrgbLuma::new(<span class=\"number\">96u8</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0xFF60</span>, integer);</code></pre></div>\n<p>See <a href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a> for more details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#169-174\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.from_u16\" class=\"fn\">from_u16</a>&lt;O&gt;(color: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a>) -&gt; Self<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\">Lumaa</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from a packed <code>u16</code> with specifiable component order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{luma, SrgbLuma};\n\n<span class=\"kw\">let </span>luma = SrgbLuma::from_u16::&lt;luma::channels::La&gt;(<span class=\"number\">0x60FF</span>);\n<span class=\"macro\">assert_eq!</span>(SrgbLuma::new(<span class=\"number\">96u8</span>), luma);</code></pre></div>\n<p>It’s also possible to use <code>From</code> and <code>Into</code>, which defaults to the\n<code>0xAALL</code> component order:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::SrgbLuma;\n\n<span class=\"kw\">let </span>luma = SrgbLuma::from(<span class=\"number\">0x60u16</span>);\n<span class=\"macro\">assert_eq!</span>(SrgbLuma::new(<span class=\"number\">96u8</span>), luma);</code></pre></div>\n<p>See <a href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a> for more details.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#177-222\">source</a><a href=\"#impl-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#195-200\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.into_linear\" class=\"fn\">into_linear</a>&lt;U&gt;(self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;, U&gt;<div class=\"where\">where\n    S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;U, T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the color to linear luminance.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLuma, LinLuma};\n\n<span class=\"kw\">let </span>linear: LinLuma&lt;<span class=\"kw\">_</span>, f32&gt; = SrgbLuma::new(<span class=\"number\">96u8</span>).into_linear();</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#216-221\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.from_linear\" class=\"fn\">from_linear</a>&lt;U&gt;(color: <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;, U&gt;) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;U, T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert linear luminance to non-linear luminance.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLuma, LinLuma};\n\n<span class=\"kw\">let </span>encoded = SrgbLuma::&lt;u8&gt;::from_linear(LinLuma::new(<span class=\"number\">0.95f32</span>));</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CLinear%3CWp%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#224-268\">source</a><a href=\"#impl-Luma%3CLinear%3CWp%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;Wp&gt;, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#239-245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.into_encoding\" class=\"fn\">into_encoding</a>&lt;U, St&gt;(self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;St, U&gt;<div class=\"where\">where\n    St: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = Wp&gt;,\n    St::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;T, U&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert a linear color to a different encoding.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLuma, LinLuma};\n\n<span class=\"kw\">let </span>encoded: SrgbLuma&lt;u8&gt; = LinLuma::new(<span class=\"number\">0.95f32</span>).into_encoding();</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#261-267\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.from_encoding\" class=\"fn\">from_encoding</a>&lt;U, St&gt;(color: <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;St, U&gt;) -&gt; Self<div class=\"where\">where\n    St: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = Wp&gt;,\n    St::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;T, U&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from linear luminance from a different encoding.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLuma, LinLuma};\n\n<span class=\"kw\">let </span>linear = LinLuma::&lt;<span class=\"kw\">_</span>, f32&gt;::from_encoding(SrgbLuma::new(<span class=\"number\">96u8</span>));</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details></div></details>",0,"palette::luma::LinLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+%26T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><a href=\"#impl-Luma%3CS,+%26T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+%26mut+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><a href=\"#impl-Luma%3CS,+%26mut+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><a href=\"#impl-Luma%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.iter\" class=\"fn\">iter</a>&lt;'a&gt;(&amp;'a self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'a Self</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'a Self</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the colors in the wrapped collections.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>&lt;'a&gt;(&amp;'a mut self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'a mut Self</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'a mut Self</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that allows modifying the colors in the wrapped collections.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T&gt;(\n    &amp;'a self,\n    index: I\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T&gt;(\n    &amp;'a mut self,\n    index: I\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Luma%3CS,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><a href=\"#impl-Luma%3CS,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/luma/struct.Luma.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, S&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Drain&lt;&#39;_, T&gt;, S&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#impl-AddAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#impl-DivAssign-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Wcag21RelativeContrast-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#801-812\">source</a><a href=\"#impl-Wcag21RelativeContrast-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html\" title=\"trait palette::color_difference::Wcag21RelativeContrast\">Wcag21RelativeContrast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"palette/convert/trait.IntoColor.html\" title=\"trait palette::convert::IntoColor\">IntoColor</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>&gt;, T&gt;&gt;,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = <a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"palette/num/trait.PartialCmp.html\" title=\"trait palette::num::PartialCmp\">PartialCmp</a> + <a class=\"trait\" href=\"palette/num/trait.MinMax.html\" title=\"trait palette::num::MinMax\">MinMax</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The scalar type used for luminance and contrast.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_luminance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#809-811\">source</a><a href=\"#method.relative_luminance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#tymethod.relative_luminance\" class=\"fn\">relative_luminance</a>(self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>&gt;, Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::color_difference::Wcag21RelativeContrast::Scalar\">Scalar</a>&gt;</h4></section></summary><div class='docblock'>Returns the WCAG 2.1 <a href=\"https://www.w3.org/TR/WCAG21/#dfn-relative-luminance\">relative\nluminance</a> of\n<code>self</code>. <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#tymethod.relative_luminance\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_contrast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/color_difference.rs.html#350-357\">source</a><a href=\"#method.relative_contrast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.relative_contrast\" class=\"fn\">relative_contrast</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::color_difference::Wcag21RelativeContrast::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>Returns the WCAG 2.1 relative luminance contrast between <code>self</code> and\n<code>other</code>. <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.relative_contrast\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_min_contrast_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/color_difference.rs.html#372-375\">source</a><a href=\"#method.has_min_contrast_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_min_contrast_text\" class=\"fn\">has_min_contrast_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::color_difference::Wcag21RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.3. Contrast is\nat least 4.5:1 (Level AA). <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_min_contrast_text\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_min_contrast_large_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/color_difference.rs.html#387-390\">source</a><a href=\"#method.has_min_contrast_large_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_min_contrast_large_text\" class=\"fn\">has_min_contrast_large_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::color_difference::Wcag21RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.3 for large\ntext. Contrast is at least 3:1 (Level AA). <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_min_contrast_large_text\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_enhanced_contrast_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/color_difference.rs.html#405-408\">source</a><a href=\"#method.has_enhanced_contrast_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_enhanced_contrast_text\" class=\"fn\">has_enhanced_contrast_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::color_difference::Wcag21RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.6. Contrast is\nat least 7:1 (Level AAA). <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_enhanced_contrast_text\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_enhanced_contrast_large_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/color_difference.rs.html#420-423\">source</a><a href=\"#method.has_enhanced_contrast_large_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_enhanced_contrast_large_text\" class=\"fn\">has_enhanced_contrast_large_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::color_difference::Wcag21RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.6 for large\ntext. Contrast is at least 4.5:1 (Level AAA). <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_enhanced_contrast_large_text\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_min_contrast_graphics\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/color_difference.rs.html#435-438\">source</a><a href=\"#method.has_min_contrast_graphics\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_min_contrast_graphics\" class=\"fn\">has_min_contrast_graphics</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::color_difference::Wcag21RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.11 for graphical\nobjects. Contrast is at least 3:1 (Level AA). <a href=\"palette/color_difference/trait.Wcag21RelativeContrast.html#method.has_min_contrast_graphics\">Read more</a></div></details></div></details>","Wcag21RelativeContrast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#impl-SaturatingSub-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the difference of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingSub","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LightenAssign-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#575\">source</a><a href=\"#impl-LightenAssign-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.LightenAssign.html\" title=\"trait palette::LightenAssign\">LightenAssign</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.MinMax.html\" title=\"trait palette::num::MinMax\">MinMax</a> + <a class=\"trait\" href=\"palette/num/trait.ClampAssign.html\" title=\"trait palette::num::ClampAssign\">ClampAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"palette/num/trait.PartialCmp.html\" title=\"trait palette::num::PartialCmp\">PartialCmp</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,\n    T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>: <a class=\"trait\" href=\"palette/bool_mask/trait.LazySelect.html\" title=\"trait palette::bool_mask::LazySelect\">LazySelect</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.LightenAssign.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The type of the lighten modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#575\">source</a><a href=\"#method.lighten_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_assign\" class=\"fn\">lighten_assign</a>(&amp;mut self, factor: T)</h4></section></summary><div class='docblock'>Scale the color towards the maximum lightness by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_assign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten_fixed_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#575\">source</a><a href=\"#method.lighten_fixed_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_fixed_assign\" class=\"fn\">lighten_fixed_assign</a>(&amp;mut self, amount: T)</h4></section></summary><div class='docblock'>Lighten the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_fixed_assign\">Read more</a></div></details></div></details>","LightenAssign","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#762-770\">source</a><a href=\"#impl-LowerHex-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#766-769\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CRgb%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CRgb%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, _S&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;_S, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    _S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,\n    _S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>: <a class=\"trait\" href=\"palette/rgb/trait.RgbSpace.html\" title=\"trait palette::rgb::RgbSpace\">RgbSpace</a>&lt;WhitePoint = &lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;_S, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;_S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Rgb<_S, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#772-780\">source</a><a href=\"#impl-UpperHex-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#776-779\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#impl-SubAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#817\">source</a><a href=\"#impl-Zeroable-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; Zeroable for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.77.2/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+1%5D%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#impl-From%3C%5BT;+1%5D%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 1]</a>&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 1]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 1]>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#618-623\">source</a><a href=\"#impl-From%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#620-622\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(luma: T) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPacked%3CO,+P%3E%3E-for-Luma%3CS,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#708-716\">source</a><a href=\"#impl-From%3CPacked%3CO,+P%3E%3E-for-Luma%3CS,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\">Lumaa</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;, P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#713-715\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(packed: <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Packed<O, P>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPreAlpha%3CLuma%3CS,+T%3E%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#576\">source</a><a href=\"#impl-From%3CPreAlpha%3CLuma%3CS,+T%3E%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"palette/blend/trait.Premultiply.html\" title=\"trait palette::blend::Premultiply\">Premultiply</a>&lt;Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#576\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(premultiplied: <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;Self&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PreAlpha<Luma<S, T>>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#impl-SaturatingAdd%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the sum of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingAdd<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CAlpha%3C_C,+_A%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CAlpha%3C_C,+_A%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, _C, _A&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;_C, _A&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    _C: <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;_C, _A&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Alpha<_C, _A>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#impl-SaturatingAdd-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the sum of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingAdd","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mix-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#574\">source</a><a href=\"#impl-Mix-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.Mix.html\" title=\"trait palette::Mix\">Mix</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.One.html\" title=\"trait palette::num::One\">One</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Mix.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The type of the mixing factor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#574\">source</a><a href=\"#method.mix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Mix.html#tymethod.mix\" class=\"fn\">mix</a>(self, other: Self, factor: T) -&gt; Self</h4></section></summary><div class='docblock'>Mix the color with an other color, by <code>factor</code>. <a href=\"palette/trait.Mix.html#tymethod.mix\">Read more</a></div></details></div></details>","Mix","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-Debug-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CYxy%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#545-556\">source</a><a href=\"#impl-FromColorUnclamped%3CYxy%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;T, T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#550-555\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Yxy<<S as LumaStandard>::WhitePoint, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<section id=\"impl-StimulusColor-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#579\">source</a><a href=\"#impl-StimulusColor-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/stimulus/trait.StimulusColor.html\" title=\"trait palette::stimulus::StimulusColor\">StimulusColor</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,</div></h3></section>","StimulusColor","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#814\">source</a><a href=\"#impl-SampleUniform-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = UniformLuma&lt;S, T&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#impl-Sub%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Luma%3CS,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Luma%3CS,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, S&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#impl-Mul%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT;+1%5D%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#impl-AsMut%3C%5BT;+1%5D%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 1]</a>&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T; 1]>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#611-616\">source</a><a href=\"#impl-AsMut%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#613-615\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#impl-MulAssign-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#34\">source</a><a href=\"#impl-Serialize-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#34\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.199/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#impl-Mul-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#599\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-Luma%3CS,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#728-733\">source</a><a href=\"#impl-From%3Cu16%3E-for-Luma%3CS,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#730-732\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CHsv%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CHsv%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, _S&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;_S, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    _S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,\n    _S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>: <a class=\"trait\" href=\"palette/rgb/trait.RgbSpace.html\" title=\"trait palette::rgb::RgbSpace\">RgbSpace</a>&lt;WhitePoint = &lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;_S, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;_S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Hsv<_S, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#impl-Sub-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Luma%3CS,+u64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#298-300\">source</a><a href=\"#impl-UintCast-for-Luma%3CS,+u64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WithAlpha%3C_A%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-WithAlpha%3C_A%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, _A&gt; <a class=\"trait\" href=\"palette/trait.WithAlpha.html\" title=\"trait palette::WithAlpha\">WithAlpha</a>&lt;_A&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    _A: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Color\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Color\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.WithAlpha.html#associatedtype.Color\" class=\"associatedtype\">Color</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The opaque color type, without any transparency. <a href=\"palette/trait.WithAlpha.html#associatedtype.Color\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.WithAlpha\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.WithAlpha\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" class=\"associatedtype\">WithAlpha</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, _A&gt;</h4></section></summary><div class='docblock'>The color type with transparency applied. <a href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.with_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.with_alpha\" class=\"fn\">with_alpha</a>(self, alpha: _A) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" title=\"type palette::WithAlpha::WithAlpha\">WithAlpha</a></h4></section></summary><div class='docblock'>Transforms the color into a transparent color with the provided\nalpha value. If <code>Self</code> already has a transparency, it is\noverwritten. <a href=\"palette/trait.WithAlpha.html#tymethod.with_alpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.without_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.without_alpha\" class=\"fn\">without_alpha</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a></h4></section></summary><div class='docblock'>Removes the transparency from the color. If <code>Self::Color</code> has\nan internal transparency field, that field will be set to\n<code>A::max_intensity()</code> to make it opaque. <a href=\"palette/trait.WithAlpha.html#tymethod.without_alpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.split\" class=\"fn\">split</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a>, _A)</h4></section></summary><div class='docblock'>Splits the color into separate color and transparency values. <a href=\"palette/trait.WithAlpha.html#tymethod.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.opaque\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha.rs.html#156-161\">source</a><a href=\"#method.opaque\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#method.opaque\" class=\"fn\">opaque</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" title=\"type palette::WithAlpha::WithAlpha\">WithAlpha</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,</div></h4></section></summary><div class='docblock'>Transforms the color into a fully opaque color with a transparency\nfield. If <code>Self</code> already has a transparency, it is overwritten. <a href=\"palette/trait.WithAlpha.html#method.opaque\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transparent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha.rs.html#176-181\">source</a><a href=\"#method.transparent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#method.transparent\" class=\"fn\">transparent</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" title=\"type palette::WithAlpha::WithAlpha\">WithAlpha</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a>,</div></h4></section></summary><div class='docblock'>Transforms the color into a fully transparent color. If <code>Self</code>\nalready has a transparency, it is overwritten. <a href=\"palette/trait.WithAlpha.html#method.transparent\">Read more</a></div></details></div></details>","WithAlpha<_A>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClampAssign-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#566-572\">source</a><a href=\"#impl-ClampAssign-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.ClampAssign.html\" title=\"trait palette::ClampAssign\">ClampAssign</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.ClampAssign.html\" title=\"trait palette::num::ClampAssign\">ClampAssign</a> + <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#566-572\">source</a><a href=\"#method.clamp_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.ClampAssign.html#tymethod.clamp_assign\" class=\"fn\">clamp_assign</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Changes out-of-bounds components to the nearest valid values. <a href=\"palette/trait.ClampAssign.html#tymethod.clamp_assign\">Read more</a></div></details></div></details>","ClampAssign","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CLuma%3CS,+T%3E%3E-for-Luma%3CS,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-Extend%3CLuma%3CS,+T%3E%3E-for-Luma%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.2/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.2/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<Luma<S, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EuclideanDistance-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#577\">source</a><a href=\"#impl-EuclideanDistance-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/color_difference/trait.EuclideanDistance.html\" title=\"trait palette::color_difference::EuclideanDistance\">EuclideanDistance</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/color_difference/trait.EuclideanDistance.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The type for the distance value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance_squared\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#577\">source</a><a href=\"#method.distance_squared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_difference/trait.EuclideanDistance.html#tymethod.distance_squared\" class=\"fn\">distance_squared</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/color_difference/trait.EuclideanDistance.html#associatedtype.Scalar\" title=\"type palette::color_difference::EuclideanDistance::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>Calculate the squared Euclidean distance from <code>self</code> to <code>other</code>. <a href=\"palette/color_difference/trait.EuclideanDistance.html#tymethod.distance_squared\">Read more</a></div></details></div></details>","EuclideanDistance","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lighten-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#575\">source</a><a href=\"#impl-Lighten-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.Lighten.html\" title=\"trait palette::Lighten\">Lighten</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.MinMax.html\" title=\"trait palette::num::MinMax\">MinMax</a> + <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"palette/num/trait.PartialCmp.html\" title=\"trait palette::num::PartialCmp\">PartialCmp</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,\n    T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>: <a class=\"trait\" href=\"palette/bool_mask/trait.LazySelect.html\" title=\"trait palette::bool_mask::LazySelect\">LazySelect</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Lighten.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The type of the lighten modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#575\">source</a><a href=\"#method.lighten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Lighten.html#tymethod.lighten\" class=\"fn\">lighten</a>(self, factor: T) -&gt; Self</h4></section></summary><div class='docblock'>Scale the color towards the maximum lightness by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Lighten.html#tymethod.lighten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#575\">source</a><a href=\"#method.lighten_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Lighten.html#tymethod.lighten_fixed\" class=\"fn\">lighten_fixed</a>(self, amount: T) -&gt; Self</h4></section></summary><div class='docblock'>Lighten the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Lighten.html#tymethod.lighten_fixed\">Read more</a></div></details></div></details>","Lighten","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#34\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, S, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#34\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.199/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Luma%3CS,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Luma%3CS,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, S&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#759\">source</a><a href=\"#impl-Clone-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#759\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Luma%3CS,+u32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#290-292\">source</a><a href=\"#impl-UintCast-for-Luma%3CS,+u32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CHsluv%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CHsluv%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(\n    color: <a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;\n) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Hsluv<<S as LumaStandard>::WhitePoint, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CLch%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CLch%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Lch<<S as LumaStandard>::WhitePoint, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayCast-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-ArrayCast-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Array\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Array\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.ArrayCast.html#associatedtype.Array\" class=\"associatedtype\">Array</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>The output type of a cast to an array.</div></details></div></details>","ArrayCast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT;+1%5D%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#impl-AsRef%3C%5BT;+1%5D%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 1]</a>&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T; 1]>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MixAssign-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#574\">source</a><a href=\"#impl-MixAssign-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.MixAssign.html\" title=\"trait palette::MixAssign\">MixAssign</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.One.html\" title=\"trait palette::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.MixAssign.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The type of the mixing factor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mix_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#574\">source</a><a href=\"#method.mix_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.MixAssign.html#tymethod.mix_assign\" class=\"fn\">mix_assign</a>(&amp;mut self, other: Self, factor: T)</h4></section></summary><div class='docblock'>Mix the color with an other color, by <code>factor</code>. <a href=\"palette/trait.MixAssign.html#tymethod.mix_assign\">Read more</a></div></details></div></details>","MixAssign","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#impl-SaturatingSub%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the difference of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingSub<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3COkhsv%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3COkhsv%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Okhsv<T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#588-595\">source</a><a href=\"#impl-Default-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#592-594\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Luma%3CS,+u16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#282-284\">source</a><a href=\"#impl-UintCast-for-Luma%3CS,+u16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Luma%3CS,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Luma%3CS,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, S&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3COklch%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3COklch%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Oklch<T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#impl-Div%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeContrast-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#783-799\">source</a><a href=\"#impl-RelativeContrast-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.RelativeContrast.html\" title=\"trait palette::RelativeContrast\">RelativeContrast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"palette/num/trait.PartialCmp.html\" title=\"trait palette::num::PartialCmp\">PartialCmp</a>,\n    T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>: <a class=\"trait\" href=\"palette/bool_mask/trait.LazySelect.html\" title=\"trait palette::bool_mask::LazySelect\">LazySelect</a>&lt;T&gt;,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;T, T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.RelativeContrast.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.2: replaced by <code>palette::color_difference::Wcag21RelativeContrast</code></span></div></span><div class='docblock'>The type of the contrast ratio.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_contrast_ratio\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#793-798\">source</a><a href=\"#method.get_contrast_ratio\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.RelativeContrast.html#tymethod.get_contrast_ratio\" class=\"fn\">get_contrast_ratio</a>(self, other: Self) -&gt; T</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.2: replaced by <code>palette::color_difference::Wcag21RelativeContrast</code></span></div></span><div class='docblock'>Calculate the contrast ratio between two colors.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_min_contrast_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/relative_contrast.rs.html#70-73\">source</a><a href=\"#method.has_min_contrast_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.RelativeContrast.html#method.has_min_contrast_text\" class=\"fn\">has_min_contrast_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/trait.RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.2: replaced by <code>palette::color_difference::Wcag21RelativeContrast</code></span></div></span><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.3. Contrast\nis at least 4.5:1 (Level AA).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_min_contrast_large_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/relative_contrast.rs.html#79-82\">source</a><a href=\"#method.has_min_contrast_large_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.RelativeContrast.html#method.has_min_contrast_large_text\" class=\"fn\">has_min_contrast_large_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/trait.RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.2: replaced by <code>palette::color_difference::Wcag21RelativeContrast</code></span></div></span><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.3 for large\ntext. Contrast is at least 3:1 (Level AA).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_enhanced_contrast_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/relative_contrast.rs.html#88-91\">source</a><a href=\"#method.has_enhanced_contrast_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.RelativeContrast.html#method.has_enhanced_contrast_text\" class=\"fn\">has_enhanced_contrast_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/trait.RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.2: replaced by <code>palette::color_difference::Wcag21RelativeContrast</code></span></div></span><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.6. Contrast\nis at least 7:1 (Level AAA).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_enhanced_contrast_large_text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/relative_contrast.rs.html#97-99\">source</a><a href=\"#method.has_enhanced_contrast_large_text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.RelativeContrast.html#method.has_enhanced_contrast_large_text\" class=\"fn\">has_enhanced_contrast_large_text</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/trait.RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.2: replaced by <code>palette::color_difference::Wcag21RelativeContrast</code></span></div></span><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.6 for large\ntext. Contrast is at least 4.5:1 (Level AAA).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_min_contrast_graphics\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/relative_contrast.rs.html#105-107\">source</a><a href=\"#method.has_min_contrast_graphics\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.RelativeContrast.html#method.has_min_contrast_graphics\" class=\"fn\">has_min_contrast_graphics</a>(\n    self,\n    other: Self\n) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"palette/trait.RelativeContrast.html#associatedtype.Scalar\" title=\"type palette::RelativeContrast::Scalar\">Scalar</a> as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.2: replaced by <code>palette::color_difference::Wcag21RelativeContrast</code></span></div></span><div class='docblock'>Verify the contrast between two colors satisfies SC 1.4.11 for graphical\nobjects. Contrast is at least 3:1 (Level AA).</div></details></div></details>","RelativeContrast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CHsl%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CHsl%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, _S&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;_S, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    _S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,\n    _S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>: <a class=\"trait\" href=\"palette/rgb/trait.RgbSpace.html\" title=\"trait palette::rgb::RgbSpace\">RgbSpace</a>&lt;WhitePoint = &lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;_S, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;_S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Hsl<_S, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#impl-RelativeEq-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; RelativeEq for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: RelativeEq,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_max_relative</a>() -&gt; T::Epsilon</h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>,\n    epsilon: T::Epsilon,\n    max_relative: T::Epsilon\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>,\n    epsilon: T::Epsilon,\n    max_relative: T::Epsilon\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>RelativeEq::relative_eq</code>].</div></details></div></details>","RelativeEq","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#impl-Div-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Luma%3CS,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#274-276\">source</a><a href=\"#impl-UintCast-for-Luma%3CS,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CHwb%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CHwb%3C_S,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, _S&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;_S, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    _S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,\n    _S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>: <a class=\"trait\" href=\"palette/rgb/trait.RgbSpace.html\" title=\"trait palette::rgb::RgbSpace\">RgbSpace</a>&lt;WhitePoint = &lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;_S, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;_S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Hwb<_S, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#impl-Add-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#impl-PartialEq-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Luma%3CS,+u128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#306-308\">source</a><a href=\"#impl-UintCast-for-Luma%3CS,+u128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Luma%3CS,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Luma%3CS,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, S&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3COklab%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3COklab%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Oklab<T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CLuv%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CLuv%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Luv<<S as LumaStandard>::WhitePoint, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3COkhwb%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3COkhwb%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Okhwb<T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CLchuv%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CLchuv%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(\n    color: <a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;\n) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Lchuv<<S as LumaStandard>::WhitePoint, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#impl-SubAssign-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#598\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#602\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CXyz%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#532-543\">source</a><a href=\"#impl-FromColorUnclamped%3CXyz%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;T, T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#537-542\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Xyz<<S as LumaStandard>::WhitePoint, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#impl-AbsDiffEq-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; AbsDiffEq for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: AbsDiffEq,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Epsilon</a> = &lt;T as AbsDiffEq&gt;::Epsilon</h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_epsilon</a>() -&gt; Self::Epsilon</h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">abs_diff_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>, epsilon: T::Epsilon) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>, epsilon: T::Epsilon) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>AbsDiffEq::abs_diff_eq</code>].</div></details></div></details>","AbsDiffEq","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3COkhsl%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3COkhsl%3CT%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Okhsl<T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#impl-UlpsEq-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; UlpsEq for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: UlpsEq,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ulps_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>, epsilon: T::Epsilon, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>, epsilon: T::Epsilon, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>UlpsEq::ulps_eq</code>].</div></details></div></details>","UlpsEq","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CLuma%3CS2,+T%3E%3E-for-Luma%3CS1,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#516-530\">source</a><a href=\"#impl-FromColorUnclamped%3CLuma%3CS2,+T%3E%3E-for-Luma%3CS1,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S1, S2, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S2, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S1, T&gt;<div class=\"where\">where\n    S1: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a> + 'static,\n    S2: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = S1::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt; + 'static,\n    S1::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;T, T&gt;,\n    S2::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;T, T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#523-529\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S2, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Luma<S2, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasBoolMask-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#581-586\">source</a><a href=\"#impl-HasBoolMask-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = &lt;T as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>The mask type to use for selecting <code>Self</code> values.</div></details></div></details>","HasBoolMask","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#impl-Add%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,)%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#558\">source</a><a href=\"#impl-From%3C(T,)%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T,)</a>&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#558\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(T,)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T,)>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#604-609\">source</a><a href=\"#impl-AsRef%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#606-608\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Premultiply-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#576\">source</a><a href=\"#impl-Premultiply-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/blend/trait.Premultiply.html\" title=\"trait palette::blend::Premultiply\">Premultiply</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a> + <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.IsValidDivisor.html\" title=\"trait palette::num::IsValidDivisor\">IsValidDivisor</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>: <a class=\"trait\" href=\"palette/bool_mask/trait.LazySelect.html\" title=\"trait palette::bool_mask::LazySelect\">LazySelect</a>&lt;T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/blend/trait.Premultiply.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The color’s component type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.premultiply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#576\">source</a><a href=\"#method.premultiply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Premultiply.html#tymethod.premultiply\" class=\"fn\">premultiply</a>(self, alpha: T) -&gt; <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Alpha mask the color. <a href=\"palette/blend/trait.Premultiply.html#tymethod.premultiply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpremultiply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#576\">source</a><a href=\"#method.unpremultiply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Premultiply.html#tymethod.unpremultiply\" class=\"fn\">unpremultiply</a>(premultiplied: <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;Self&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Self, T)</a></h4></section></summary><div class='docblock'>Alpha unmask the color, resulting in a color and transparency pair. <a href=\"palette/blend/trait.Premultiply.html#tymethod.unpremultiply\">Read more</a></div></details></div></details>","Premultiply","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clamp-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#566-572\">source</a><a href=\"#impl-Clamp-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.Clamp.html\" title=\"trait palette::Clamp\">Clamp</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a> + <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#566-572\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Clamp.html#tymethod.clamp\" class=\"fn\">clamp</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Return a new color where out-of-bounds components have been changed to\nthe nearest valid values. <a href=\"palette/trait.Clamp.html#tymethod.clamp\">Read more</a></div></details></div></details>","Clamp","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CLuma%3CS,+T%3E%3E-for-Luma%3CS,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-FromIterator%3CLuma%3CS,+T%3E%3E-for-Luma%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, C&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt;,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<Luma<S, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#impl-AddAssign-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#597\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IsWithinBounds-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#560-565\">source</a><a href=\"#impl-IsWithinBounds-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/trait.IsWithinBounds.html\" title=\"trait palette::IsWithinBounds\">IsWithinBounds</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.PartialCmp.html\" title=\"trait palette::num::PartialCmp\">PartialCmp</a> + <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>,\n    T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Output = T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_within_bounds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#560-565\">source</a><a href=\"#method.is_within_bounds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.IsWithinBounds.html#tymethod.is_within_bounds\" class=\"fn\">is_within_bounds</a>(&amp;self) -&gt; T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>Check if the color’s components are within the expected range bounds. <a href=\"palette/trait.IsWithinBounds.html#tymethod.is_within_bounds\">Read more</a></div></details></div></details>","IsWithinBounds","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BLuma%3CS,+T%3E;+N%5D%3E-for-Luma%3CS,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#756\">source</a><a href=\"#impl-From%3C%5BLuma%3CS,+T%3E;+N%5D%3E-for-Luma%3CS,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#756\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Luma<S, T>; N]>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<section id=\"impl-Eq-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#760\">source</a><a href=\"#impl-Eq-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<section id=\"impl-Pod-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#820\">source</a><a href=\"#impl-Pod-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: 'static, T&gt; Pod for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: Pod,</div></h3></section>","Pod","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CLab%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#impl-FromColorUnclamped%3CLab%3C%3CS+as+LumaStandard%3E::WhitePoint,+T%3E%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;: <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;&gt; + <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#33\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(color: <a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;&lt;S as <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&gt;::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<Lab<<S as LumaStandard>::WhitePoint, T>>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#600\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"],["<section id=\"impl-Copy-for-Luma%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#759\">source</a><a href=\"#impl-Copy-for-Luma%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","palette::luma::SrgbLuma","palette::luma::LinLuma","palette::luma::GammaLuma"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()