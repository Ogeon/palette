(function() {
    var type_impls = Object.fromEntries([["palette",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#660-716\">Source</a><a href=\"#impl-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#682-687\">Source</a><h4 class=\"code-header\">pub fn <a href=\"palette/rgb/type.Rgba.html#tymethod.into_u32\" class=\"fn\">into_u32</a>&lt;O&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert to a packed <code>u32</code> with with specifiable component order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{rgb, Srgba};\n\n<span class=\"kw\">let </span>integer = Srgba::new(<span class=\"number\">96u8</span>, <span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>).into_u32::&lt;rgb::channels::Argb&gt;();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0xFF607F00</span>, integer);</code></pre></div>\n<p>It’s also possible to use <code>From</code> and <code>Into</code>, which defaults to the\n<code>0xRRGGBBAA</code> component order:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::Srgba;\n\n<span class=\"kw\">let </span>integer = u32::from(Srgba::new(<span class=\"number\">96u8</span>, <span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x607F00FF</span>, integer);</code></pre></div>\n<p>See <a href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a> for more details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#710-715\">Source</a><h4 class=\"code-header\">pub fn <a href=\"palette/rgb/type.Rgba.html#tymethod.from_u32\" class=\"fn\">from_u32</a>&lt;O&gt;(color: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>) -&gt; Self<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from a packed <code>u32</code> with specifiable component order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{rgb, Srgba};\n\n<span class=\"kw\">let </span>rgba = Srgba::from_u32::&lt;rgb::channels::Argb&gt;(<span class=\"number\">0xFF607F00</span>);\n<span class=\"macro\">assert_eq!</span>(Srgba::new(<span class=\"number\">96u8</span>, <span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>), rgba);</code></pre></div>\n<p>It’s also possible to use <code>From</code> and <code>Into</code>, which defaults to the\n<code>0xRRGGBBAA</code> component order:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::Srgba;\n\n<span class=\"kw\">let </span>rgba = Srgba::from(<span class=\"number\">0x607F00FF</span>);\n<span class=\"macro\">assert_eq!</span>(Srgba::new(<span class=\"number\">96u8</span>, <span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>), rgba);</code></pre></div>\n<p>See <a href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a> for more details.</p>\n</div></details></div></details>",0,"palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CS%3E,+f32%3E%3E-for-Alpha%3CRgb%3CS,+f64%3E,+f64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1481-1486\">Source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CS%3E,+f32%3E%3E-for-Alpha%3CRgb%3CS,+f64%3E,+f64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1483-1485\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<S>, f32>>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CS%3E,+f32%3E%3E-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1439-1444\">Source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CS%3E,+f32%3E%3E-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1441-1443\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<S>, f32>>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CS,+f64%3E,+f64%3E%3E-for-Alpha%3CRgb%3CS%3E,+f32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1495-1500\">Source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CS,+f64%3E,+f64%3E%3E-for-Alpha%3CRgb%3CS%3E,+f32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1497-1499\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<S, f64>, f64>>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CS,+f64%3E,+f64%3E%3E-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1467-1472\">Source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CS,+f64%3E,+f64%3E%3E-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1469-1471\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<S, f64>, f64>>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CS,+u8%3E,+u8%3E%3E-for-Alpha%3CRgb%3CS%3E,+f32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1425-1430\">Source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CS,+u8%3E,+u8%3E%3E-for-Alpha%3CRgb%3CS%3E,+f32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1427-1429\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<S, u8>, u8>>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CS,+u8%3E,+u8%3E%3E-for-Alpha%3CRgb%3CS,+f64%3E,+f64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1453-1458\">Source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CS,+u8%3E,+u8%3E%3E-for-Alpha%3CRgb%3CS,+f64%3E,+f64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1455-1457\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<S, u8>, u8>>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPacked%3CO,+P%3E%3E-for-Alpha%3CRgb%3CS,+T%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1380-1388\">Source</a><a href=\"#impl-From%3CPacked%3CO,+P%3E%3E-for-Alpha%3CRgb%3CS,+T%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, T&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, T&gt;, P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1385-1387\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(packed: <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Packed<O, P>>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1397-1402\">Source</a><a href=\"#impl-From%3Cu32%3E-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1399-1401\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u32>","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Alpha%3CRgb%3CS%3E,+f32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1303-1316\">Source</a><a href=\"#impl-FromStr-for-Alpha%3CRgb%3CS%3E,+f32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1308-1315\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(hex: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a color hex code for 16 bit components or less into an <a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba&lt;S, f32&gt;</code></a>\nvalue.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1304\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"palette/rgb/enum.FromHexError.html\" title=\"enum palette::rgb::FromHexError\">FromHexError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Alpha%3CRgb%3CS,+f64%3E,+f64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1333-1347\">Source</a><a href=\"#impl-FromStr-for-Alpha%3CRgb%3CS,+f64%3E,+f64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1338-1346\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(hex: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a color hex code for 32 bit components or less into an <a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba&lt;S, f64&gt;</code></a>\nvalue.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1334\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"palette/rgb/enum.FromHexError.html\" title=\"enum palette::rgb::FromHexError\">FromHexError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Alpha%3CRgb%3CS,+u16%3E,+u16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1240-1253\">Source</a><a href=\"#impl-FromStr-for-Alpha%3CRgb%3CS,+u16%3E,+u16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1245-1252\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(hex: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a color hex code of format ‘#ffff0000bbbbffff’, or shorter, (with\nor without the leading ‘#’) into an <a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba&lt;S, u16&gt;</code></a> value.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1241\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"palette/rgb/enum.FromHexError.html\" title=\"enum palette::rgb::FromHexError\">FromHexError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Alpha%3CRgb%3CS,+u32%3E,+u32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1272-1287\">Source</a><a href=\"#impl-FromStr-for-Alpha%3CRgb%3CS,+u32%3E,+u32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1278-1286\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(hex: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a color hex code of format ‘#ffffffff00000000bbbbbbbbffffffff’,\nor shorter, (with or without the leading ‘#’) into an <a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba&lt;S, u32&gt;</code></a>\nvalue.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1273\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"palette/rgb/enum.FromHexError.html\" title=\"enum palette::rgb::FromHexError\">FromHexError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1210-1223\">Source</a><a href=\"#impl-FromStr-for-Alpha%3CRgb%3CS,+u8%3E,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1215-1222\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(hex: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a color hex code of format ‘#ff00bbff’ or ‘#abcd’ (with or\nwithout the leading ‘#’) into an <a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba&lt;S, u8&gt;</code></a> value.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1211\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"palette/rgb/enum.FromHexError.html\" title=\"enum palette::rgb::FromHexError\">FromHexError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","palette::rgb::Srgba","palette::rgb::LinSrgba","palette::rgb::GammaSrgba","palette::rgb::AdobeRgba","palette::rgb::LinAdobeRgba","palette::rgb::ProPhotoRgba","palette::rgb::LinProPhotoRgba"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[35452]}