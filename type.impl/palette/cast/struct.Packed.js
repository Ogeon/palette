(function() {
    var type_impls = Object.fromEntries([["palette",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayCast-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#116-118\">Source</a><a href=\"#impl-ArrayCast-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Array\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#117\">Source</a><a href=\"#associatedtype.Array\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.ArrayCast.html#associatedtype.Array\" class=\"associatedtype\">Array</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>The output type of a cast to an array.</div></details></div></details>","ArrayCast","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT;+N%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#impl-AsMut%3C%5BT;+N%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T; N]>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CP%3E-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#161\">Source</a><a href=\"#impl-AsMut%3CP%3E-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;: <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a>&lt;Uint = P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#161\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;mut P</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<P>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT;+N%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#impl-AsRef%3C%5BT;+N%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T; N]>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CP%3E-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#161\">Source</a><a href=\"#impl-AsRef%3CP%3E-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;: <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a>&lt;Uint = P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#161\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;P</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<P>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#99-110\">Source</a><a href=\"#impl-Clone-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#104-109\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#63\">Source</a><a href=\"#impl-Debug-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#63\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-Packed%3CO,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#160\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.array.html\">[T; N]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; N]>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CLuma%3CS,+T%3E,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#698-706\">Source</a><a href=\"#impl-From%3CAlpha%3CLuma%3CS,+T%3E,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, T&gt;&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\">Lumaa</a>&lt;S, T&gt;, P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#703-705\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\">Lumaa</a>&lt;S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Luma<S, T>, T>>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CS,+T%3E,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1360-1368\">Source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CS,+T%3E,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, T&gt;&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, T&gt;, P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1365-1367\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<S, T>, T>>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLuma%3CS,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#687-696\">Source</a><a href=\"#impl-From%3CLuma%3CS,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, P, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\">Lumaa</a>&lt;S, T&gt;, P&gt;,\n    <a class=\"type\" href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\">Lumaa</a>&lt;S, T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#693-695\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Luma<S, T>>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CP%3E-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#161\">Source</a><a href=\"#impl-From%3CP%3E-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;: <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a>&lt;Uint = P&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#161\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uint: P) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<P>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRgb%3CS,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1349-1358\">Source</a><a href=\"#impl-From%3CRgb%3CS,+T%3E%3E-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, P, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;&gt; for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;<a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, T&gt;, P&gt;,\n    <a class=\"type\" href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\">Rgba</a>&lt;S, T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1355-1357\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rgb<S, T>>","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#74-95\">Source</a><a href=\"#impl-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pack\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#77-85\">Source</a><h4 class=\"code-header\">pub fn <a href=\"palette/cast/struct.Packed.html#tymethod.pack\" class=\"fn\">pack</a>&lt;C&gt;(color: C) -&gt; Self<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;C, P&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Transform a color value into a packed memory representation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#89-94\">Source</a><h4 class=\"code-header\">pub fn <a href=\"palette/cast/struct.Packed.html#tymethod.unpack\" class=\"fn\">unpack</a>&lt;C&gt;(self) -&gt; C<div class=\"where\">where\n    O: <a class=\"trait\" href=\"palette/cast/trait.ComponentOrder.html\" title=\"trait palette::cast::ComponentOrder\">ComponentOrder</a>&lt;C, P&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Transform a packed color into a regular color value.</p>\n</div></details></div></details>",0,"palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#63\">Source</a><a href=\"#impl-PartialEq-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#63\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Packed%3CO,+u128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#156-158\">Source</a><a href=\"#impl-UintCast-for-Packed%3CO,+u128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#157\">Source</a><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Packed%3CO,+u16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#132-134\">Source</a><a href=\"#impl-UintCast-for-Packed%3CO,+u16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#133\">Source</a><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Packed%3CO,+u32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#140-142\">Source</a><a href=\"#impl-UintCast-for-Packed%3CO,+u32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#141\">Source</a><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Packed%3CO,+u64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#148-150\">Source</a><a href=\"#impl-UintCast-for-Packed%3CO,+u64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#149\">Source</a><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UintCast-for-Packed%3CO,+u8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#124-126\">Source</a><a href=\"#impl-UintCast-for-Packed%3CO,+u8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"palette/cast/trait.UintCast.html\" title=\"trait palette::cast::UintCast\">UintCast</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Uint\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#125\">Source</a><a href=\"#associatedtype.Uint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.UintCast.html#associatedtype.Uint\" class=\"associatedtype\">Uint</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>An unsigned integer with the same size as <code>Self</code>.</div></details></div></details>","UintCast","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#169\">Source</a><a href=\"#impl-Zeroable-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; Zeroable for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    P: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.88.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<section id=\"impl-Copy-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#97\">Source</a><a href=\"#impl-Copy-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<section id=\"impl-Eq-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#63\">Source</a><a href=\"#impl-Eq-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;</h3></section>","Eq","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<section id=\"impl-Pod-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#171\">Source</a><a href=\"#impl-Pod-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O: 'static, P&gt; Pod for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;<div class=\"where\">where\n    P: Pod,</div></h3></section>","Pod","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"],["<section id=\"impl-StructuralPartialEq-for-Packed%3CO,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cast/packed.rs.html#63\">Source</a><a href=\"#impl-StructuralPartialEq-for-Packed%3CO,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"palette/cast/struct.Packed.html\" title=\"struct palette::cast::Packed\">Packed</a>&lt;O, P&gt;</h3></section>","StructuralPartialEq","palette::luma::PackedLumaa","palette::luma::PackedAluma","palette::rgb::PackedRgba","palette::rgb::PackedArgb","palette::rgb::PackedBgra","palette::rgb::PackedAbgr"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[45882]}