(function() {var type_impls = {
"palette":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#463-479\">source</a><a href=\"#impl-AbsDiffEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; AbsDiffEq for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: AbsDiffEq&lt;Epsilon = T::Epsilon&gt;,\n    T: AbsDiffEq,\n    T::Epsilon: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Epsilon</a> = &lt;T as AbsDiffEq&gt;::Epsilon</h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#471-473\">source</a><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_epsilon</a>() -&gt; Self::Epsilon</h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#475-478\">source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">abs_diff_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>, epsilon: T::Epsilon) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::Epsilon) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>AbsDiffEq::abs_diff_eq</code>].</div></details></div></details>","AbsDiffEq","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#536-549\">source</a><a href=\"#impl-Add%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#543-548\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#521-534\">source</a><a href=\"#impl-Add-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#528-533\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#562-571\">source</a><a href=\"#impl-AddAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#567-570\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#551-560\">source</a><a href=\"#impl-AddAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#556-559\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#158-163\">source</a><a href=\"#impl-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/blend/trait.Premultiply.html\" title=\"trait palette::blend::Premultiply\">Premultiply</a>&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/blend/trait.Premultiply.html#associatedtype.Scalar\" title=\"type palette::blend::Premultiply::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.premultiply\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#160-162\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.premultiply\" class=\"fn\">premultiply</a>(self) -&gt; <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Alpha mask the color by its transparency.</p>\n</div></details></div></details>",0,"palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#140-156\">source</a><a href=\"#impl-Alpha%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#142-147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.iter\" class=\"fn\">iter</a>&lt;'a&gt;(&amp;'a self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a Self</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a Self</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the colors in the wrapped collections.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#150-155\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>&lt;'a&gt;(&amp;'a mut self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut Self</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut Self</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that allows modifying the colors in the wrapped collections.</p>\n</div></details></div></details>",0,"palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#165-175\">source</a><a href=\"#impl-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_alpha\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#167-169\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.min_alpha\" class=\"fn\">min_alpha</a>() -&gt; T</h4></section></summary><div class=\"docblock\"><p>Return the <code>alpha</code> value minimum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_alpha\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#172-174\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.max_alpha\" class=\"fn\">max_alpha</a>() -&gt; T</h4></section></summary><div class=\"docblock\"><p>Return the <code>alpha</code> value maximum.</p>\n</div></details></div></details>",0,"palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/full.rs.html#255-354\">source</a><a href=\"#impl-Alpha%3CCam16%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Cam16a\"></span><a href=\"palette/cam16/type.Cam16a.html\" title=\"type palette::cam16::Cam16a\"><code>Cam16a</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/full.rs.html#284-299\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>&lt;WpParam&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive CIE CAM16 attributes with transparency for the provided color,\nunder the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), example_parameters);</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), baked_parameters);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/full.rs.html#338-353\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_xyz\" class=\"fn\">into_xyz</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.Cam16IntoUnclamped.html\" title=\"trait palette::cam16::Cam16IntoUnclamped\">Cam16IntoUnclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Construct an XYZ color with transparency, that matches these CIE CAM16\nattributes, under the provided viewing conditions.</p>\n<p class=\"warning\">\nThis assumes that all of the correlated attributes are consistent, as\nonly some of them are actually used. You may want to use one of the\npartial CAM16 representations for more control over which set of\nattributes that should be.\n</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16a, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>cam16a = get_cam16a_value();\n<span class=\"kw\">let </span>rgba = Srgba::from_color(cam16a.into_xyz(example_parameters));</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16a, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>cam16a = get_cam16a_value();\n<span class=\"kw\">let </span>rgba = Srgba::from_color(cam16a.into_xyz(baked_parameters));</code></pre></div>\n</div></details></div></details>",0,"palette::cam16::full::Cam16a"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jch%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-Alpha%3CCam16Jch%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jch%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-Alpha%3CCam16Jch%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jch%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-Alpha%3CCam16Jch%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-Alpha%3CCam16Jch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p>“<span id=\"Cam16Jcha\"></span><a href=\"palette/cam16/type.Cam16Jcha.html\" title=\"type palette::cam16::Cam16Jcha\"><code>Cam16Jcha</code></a>\nimplementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    lightness: T,\n    chroma: T,\n    hue: H,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    lightness: T,\n    chroma: T,\n    hue: <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency. This is the\nsame as <code>Cam16Jch::new</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(lightness, chroma, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    (lightness, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(lightness, chroma, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>&lt;WpParam&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive partial CIE CAM16 attributes with transparency, for the provided\ncolor, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Jcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Jcha::from_xyz(rgba.into_color(), example_parameters);</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Jcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Jcha::from_xyz(rgba.into_color(), baked_parameters);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_xyz\" class=\"fn\">into_xyz</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.Cam16IntoUnclamped.html\" title=\"trait palette::cam16::Cam16IntoUnclamped\">Cam16IntoUnclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Construct an XYZ color with transparency, from these CIE CAM16\nattributes, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Jcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>partial = Cam16Jcha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(example_parameters));</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Jcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>partial = Cam16Jcha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(baked_parameters));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_full\" class=\"fn\">from_full</a>(full: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial set of CIE CAM16 attributes with transparency.</p>\n<p>It’s also possible to use <code>Cam16Jcha::from</code> or <code>Cam16a::into</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_full\" class=\"fn\">into_full</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reconstruct a full set of CIE CAM16 attributes with transparency, using\nthe original viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Cam16Jcha, Parameters}};\n<span class=\"kw\">use </span>approx::assert_relative_eq;\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"comment\">// Optional, but saves some work:\n</span><span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f64</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), baked_parameters);\n<span class=\"kw\">let </span>partial = Cam16Jcha::from(cam16a);\n<span class=\"kw\">let </span>reconstructed = partial.into_full(baked_parameters);\n\n<span class=\"macro\">assert_relative_eq!</span>(cam16a, reconstructed, epsilon = <span class=\"number\">0.0000000000001</span>);</code></pre></div>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jch%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-Alpha%3CCam16Jch%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Iter.html\" title=\"struct palette::cam16::cam16_jch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jmh%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-Alpha%3CCam16Jmh%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jmh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-Alpha%3CCam16Jmh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jmh%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-Alpha%3CCam16Jmh%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-Alpha%3CCam16Jmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p>“<span id=\"Cam16Jmha\"></span><a href=\"palette/cam16/type.Cam16Jmha.html\" title=\"type palette::cam16::Cam16Jmha\"><code>Cam16Jmha</code></a>\nimplementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    lightness: T,\n    colorfulness: T,\n    hue: H,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    lightness: T,\n    colorfulness: T,\n    hue: <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency. This is the\nsame as <code>Cam16Jmh::new</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(lightness, colorfulness, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    (lightness, colorfulness, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(lightness, colorfulness, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>&lt;WpParam&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive partial CIE CAM16 attributes with transparency, for the provided\ncolor, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Jmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Jmha::from_xyz(rgba.into_color(), example_parameters);</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Jmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Jmha::from_xyz(rgba.into_color(), baked_parameters);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_xyz\" class=\"fn\">into_xyz</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.Cam16IntoUnclamped.html\" title=\"trait palette::cam16::Cam16IntoUnclamped\">Cam16IntoUnclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Construct an XYZ color with transparency, from these CIE CAM16\nattributes, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Jmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>partial = Cam16Jmha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(example_parameters));</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Jmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>partial = Cam16Jmha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(baked_parameters));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_full\" class=\"fn\">from_full</a>(full: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial set of CIE CAM16 attributes with transparency.</p>\n<p>It’s also possible to use <code>Cam16Jmha::from</code> or <code>Cam16a::into</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_full\" class=\"fn\">into_full</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reconstruct a full set of CIE CAM16 attributes with transparency, using\nthe original viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Cam16Jmha, Parameters}};\n<span class=\"kw\">use </span>approx::assert_relative_eq;\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"comment\">// Optional, but saves some work:\n</span><span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f64</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), baked_parameters);\n<span class=\"kw\">let </span>partial = Cam16Jmha::from(cam16a);\n<span class=\"kw\">let </span>reconstructed = partial.into_full(baked_parameters);\n\n<span class=\"macro\">assert_relative_eq!</span>(cam16a, reconstructed, epsilon = <span class=\"number\">0.0000000000001</span>);</code></pre></div>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jmh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-Alpha%3CCam16Jmh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jsh%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-Alpha%3CCam16Jsh%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jsh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-Alpha%3CCam16Jsh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jsh%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-Alpha%3CCam16Jsh%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jsh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-Alpha%3CCam16Jsh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p>“<span id=\"Cam16Jsha\"></span><a href=\"palette/cam16/type.Cam16Jsha.html\" title=\"type palette::cam16::Cam16Jsha\"><code>Cam16Jsha</code></a>\nimplementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    lightness: T,\n    saturation: T,\n    hue: H,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    lightness: T,\n    saturation: T,\n    hue: <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency. This is the\nsame as <code>Cam16Jsh::new</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(lightness, saturation, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    (lightness, saturation, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(lightness, saturation, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>&lt;WpParam&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive partial CIE CAM16 attributes with transparency, for the provided\ncolor, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Jsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Jsha::from_xyz(rgba.into_color(), example_parameters);</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Jsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Jsha::from_xyz(rgba.into_color(), baked_parameters);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_xyz\" class=\"fn\">into_xyz</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.Cam16IntoUnclamped.html\" title=\"trait palette::cam16::Cam16IntoUnclamped\">Cam16IntoUnclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Construct an XYZ color with transparency, from these CIE CAM16\nattributes, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Jsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>partial = Cam16Jsha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(example_parameters));</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Jsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>partial = Cam16Jsha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(baked_parameters));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_full\" class=\"fn\">from_full</a>(full: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial set of CIE CAM16 attributes with transparency.</p>\n<p>It’s also possible to use <code>Cam16Jsha::from</code> or <code>Cam16a::into</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_full\" class=\"fn\">into_full</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reconstruct a full set of CIE CAM16 attributes with transparency, using\nthe original viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Cam16Jsha, Parameters}};\n<span class=\"kw\">use </span>approx::assert_relative_eq;\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"comment\">// Optional, but saves some work:\n</span><span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f64</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), baked_parameters);\n<span class=\"kw\">let </span>partial = Cam16Jsha::from(cam16a);\n<span class=\"kw\">let </span>reconstructed = partial.into_full(baked_parameters);\n\n<span class=\"macro\">assert_relative_eq!</span>(cam16a, reconstructed, epsilon = <span class=\"number\">0.0000000000001</span>);</code></pre></div>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Jsh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-Alpha%3CCam16Jsh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qch%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-Alpha%3CCam16Qch%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qch%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-Alpha%3CCam16Qch%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qch%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-Alpha%3CCam16Qch%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-Alpha%3CCam16Qch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p>“<span id=\"Cam16Qcha\"></span><a href=\"palette/cam16/type.Cam16Qcha.html\" title=\"type palette::cam16::Cam16Qcha\"><code>Cam16Qcha</code></a>\nimplementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    brightness: T,\n    chroma: T,\n    hue: H,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    brightness: T,\n    chroma: T,\n    hue: <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency. This is the\nsame as <code>Cam16Qch::new</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(brightness, chroma, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    (brightness, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(brightness, chroma, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>&lt;WpParam&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive partial CIE CAM16 attributes with transparency, for the provided\ncolor, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Qcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Qcha::from_xyz(rgba.into_color(), example_parameters);</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Qcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Qcha::from_xyz(rgba.into_color(), baked_parameters);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_xyz\" class=\"fn\">into_xyz</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.Cam16IntoUnclamped.html\" title=\"trait palette::cam16::Cam16IntoUnclamped\">Cam16IntoUnclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Construct an XYZ color with transparency, from these CIE CAM16\nattributes, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Qcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>partial = Cam16Qcha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(example_parameters));</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Qcha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>partial = Cam16Qcha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(baked_parameters));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_full\" class=\"fn\">from_full</a>(full: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial set of CIE CAM16 attributes with transparency.</p>\n<p>It’s also possible to use <code>Cam16Qcha::from</code> or <code>Cam16a::into</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_full\" class=\"fn\">into_full</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reconstruct a full set of CIE CAM16 attributes with transparency, using\nthe original viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Cam16Qcha, Parameters}};\n<span class=\"kw\">use </span>approx::assert_relative_eq;\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"comment\">// Optional, but saves some work:\n</span><span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f64</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), baked_parameters);\n<span class=\"kw\">let </span>partial = Cam16Qcha::from(cam16a);\n<span class=\"kw\">let </span>reconstructed = partial.into_full(baked_parameters);\n\n<span class=\"macro\">assert_relative_eq!</span>(cam16a, reconstructed, epsilon = <span class=\"number\">0.0000000000001</span>);</code></pre></div>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qch%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-Alpha%3CCam16Qch%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Iter.html\" title=\"struct palette::cam16::cam16_qch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qmh%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-Alpha%3CCam16Qmh%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qmh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-Alpha%3CCam16Qmh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qmh%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-Alpha%3CCam16Qmh%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-Alpha%3CCam16Qmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p>“<span id=\"Cam16Qmha\"></span><a href=\"palette/cam16/type.Cam16Qmha.html\" title=\"type palette::cam16::Cam16Qmha\"><code>Cam16Qmha</code></a>\nimplementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    brightness: T,\n    colorfulness: T,\n    hue: H,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    brightness: T,\n    colorfulness: T,\n    hue: <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency. This is the\nsame as <code>Cam16Qmh::new</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(brightness, colorfulness, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    (brightness, colorfulness, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(brightness, colorfulness, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>&lt;WpParam&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive partial CIE CAM16 attributes with transparency, for the provided\ncolor, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Qmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Qmha::from_xyz(rgba.into_color(), example_parameters);</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Qmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Qmha::from_xyz(rgba.into_color(), baked_parameters);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_xyz\" class=\"fn\">into_xyz</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.Cam16IntoUnclamped.html\" title=\"trait palette::cam16::Cam16IntoUnclamped\">Cam16IntoUnclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Construct an XYZ color with transparency, from these CIE CAM16\nattributes, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Qmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>partial = Cam16Qmha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(example_parameters));</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Qmha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>partial = Cam16Qmha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(baked_parameters));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_full\" class=\"fn\">from_full</a>(full: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial set of CIE CAM16 attributes with transparency.</p>\n<p>It’s also possible to use <code>Cam16Qmha::from</code> or <code>Cam16a::into</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_full\" class=\"fn\">into_full</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reconstruct a full set of CIE CAM16 attributes with transparency, using\nthe original viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Cam16Qmha, Parameters}};\n<span class=\"kw\">use </span>approx::assert_relative_eq;\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"comment\">// Optional, but saves some work:\n</span><span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f64</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), baked_parameters);\n<span class=\"kw\">let </span>partial = Cam16Qmha::from(cam16a);\n<span class=\"kw\">let </span>reconstructed = partial.into_full(baked_parameters);\n\n<span class=\"macro\">assert_relative_eq!</span>(cam16a, reconstructed, epsilon = <span class=\"number\">0.0000000000001</span>);</code></pre></div>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qmh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-Alpha%3CCam16Qmh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qsh%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-Alpha%3CCam16Qsh%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qsh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-Alpha%3CCam16Qsh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qsh%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-Alpha%3CCam16Qsh%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qsh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-Alpha%3CCam16Qsh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p>“<span id=\"Cam16Qsha\"></span><a href=\"palette/cam16/type.Cam16Qsha.html\" title=\"type palette::cam16::Cam16Qsha\"><code>Cam16Qsha</code></a>\nimplementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    brightness: T,\n    saturation: T,\n    hue: H,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    brightness: T,\n    saturation: T,\n    hue: <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial CIE CAM16 color with transparency. This is the\nsame as <code>Cam16Qsh::new</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(brightness, saturation, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    (brightness, saturation, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(brightness, saturation, hue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_xyz\" class=\"fn\">from_xyz</a>&lt;WpParam&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Derive partial CIE CAM16 attributes with transparency, for the provided\ncolor, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Qsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Qsha::from_xyz(rgba.into_color(), example_parameters);</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16Qsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>partial = Cam16Qsha::from_xyz(rgba.into_color(), baked_parameters);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_xyz\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_xyz\" class=\"fn\">into_xyz</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.Cam16IntoUnclamped.html\" title=\"trait palette::cam16::Cam16IntoUnclamped\">Cam16IntoUnclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;WpParam::<a class=\"associatedtype\" href=\"palette/cam16/trait.WhitePointParameter.html#associatedtype.StaticWp\" title=\"type palette::cam16::WhitePointParameter::StaticWp\">StaticWp</a>, T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Construct an XYZ color with transparency, from these CIE CAM16\nattributes, under the provided viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Qsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>partial = Cam16Qsha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(example_parameters));</code></pre></div>\n<p>It’s also possible to “pre-bake” the parameters, to avoid recalculate\nsome of the derived values when converting multiple color value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, FromColor, cam16::{Cam16Qsha, Parameters}};\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>partial = Cam16Qsha::new(<span class=\"number\">50.0f32</span>, <span class=\"number\">80.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>rgba = Srgba::from_color(partial.into_xyz(baked_parameters));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_full\" class=\"fn\">from_full</a>(full: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a partial set of CIE CAM16 attributes with transparency.</p>\n<p>It’s also possible to use <code>Cam16Qsha::from</code> or <code>Cam16a::into</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_full\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_full\" class=\"fn\">into_full</a>&lt;WpParam&gt;(\n    self,\n    parameters: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.BakedParameters.html\" title=\"struct palette::cam16::BakedParameters\">BakedParameters</a>&lt;WpParam, T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/cam16/trait.IntoCam16Unclamped.html\" title=\"trait palette::cam16::IntoCam16Unclamped\">IntoCam16Unclamped</a>&lt;WpParam, <a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, Scalar = T::<a class=\"associatedtype\" href=\"palette/num/trait.FromScalar.html#associatedtype.Scalar\" title=\"type palette::num::FromScalar::Scalar\">Scalar</a>&gt;,\n    WpParam: <a class=\"trait\" href=\"palette/cam16/trait.WhitePointParameter.html\" title=\"trait palette::cam16::WhitePointParameter\">WhitePointParameter</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"palette/num/trait.FromScalar.html\" title=\"trait palette::num::FromScalar\">FromScalar</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reconstruct a full set of CIE CAM16 attributes with transparency, using\nthe original viewing conditions.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, IntoColor, cam16::{Cam16a, Cam16Qsha, Parameters}};\n<span class=\"kw\">use </span>approx::assert_relative_eq;\n\n<span class=\"comment\">// Customize these according to the viewing conditions:\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>example_parameters = Parameters::default_static_wp(<span class=\"number\">40.0</span>);\n\n<span class=\"comment\">// Optional, but saves some work:\n</span><span class=\"kw\">let </span>baked_parameters = example_parameters.bake();\n\n<span class=\"kw\">let </span>rgba = Srgba::new(<span class=\"number\">0.3f64</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.9</span>);\n<span class=\"kw\">let </span>cam16a = Cam16a::from_xyz(rgba.into_color(), baked_parameters);\n<span class=\"kw\">let </span>partial = Cam16Qsha::from(cam16a);\n<span class=\"kw\">let </span>reconstructed = partial.into_full(baked_parameters);\n\n<span class=\"macro\">assert_relative_eq!</span>(cam16a, reconstructed, epsilon = <span class=\"number\">0.0000000000001</span>);</code></pre></div>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16Qsh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-Alpha%3CCam16Qsh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJab%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><a href=\"#impl-Alpha%3CCam16UcsJab%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJab%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><a href=\"#impl-Alpha%3CCam16UcsJab%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJab%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><a href=\"#impl-Alpha%3CCam16UcsJab%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#159-177\">source</a><a href=\"#impl-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Cam16UcsJaba\"></span><a href=\"palette/cam16/type.Cam16UcsJaba.html\" title=\"type palette::cam16::Cam16UcsJaba\"><code>Cam16UcsJaba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#161-166\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(lightness: T, a: T, b: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CAM16-UCS J’ a’ b’ color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#169-171\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(J', a', b', a)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#174-176\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((lightness, a, b, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(J', a', b', a)</code> tuple.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJab%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><a href=\"#impl-Alpha%3CCam16UcsJab%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJabIter.html\" title=\"struct palette::cam16::Cam16UcsJabIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJmh%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><a href=\"#impl-Alpha%3CCam16UcsJmh%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJmh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><a href=\"#impl-Alpha%3CCam16UcsJmh%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJmh%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><a href=\"#impl-Alpha%3CCam16UcsJmh%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#140-172\">source</a><a href=\"#impl-Alpha%3CCam16UcsJmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Cam16UcsJmha\"></span><a href=\"palette/cam16/type.Cam16UcsJmha.html\" title=\"type palette::cam16::Cam16UcsJmha\"><code>Cam16UcsJmha</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#142-144\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    lightness: T,\n    colorfulness: T,\n    hue: H,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CAM16-UCS J’ M’ h’ color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#149-154\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    lightness: T,\n    colorfulness: T,\n    hue: <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CAM16-UCS J’ M’ h’ color with transparency. This is the same as\n<code>Cam16UcsJmha::new</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#157-164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(J', M', h', a)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#167-171\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;&gt;(\n    (lightness, colorfulness, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(J', M', h', a)</code> tuple.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CCam16UcsJmh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><a href=\"#impl-Alpha%3CCam16UcsJmh%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmhIter.html\" title=\"struct palette::cam16::Cam16UcsJmhIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CS,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><a href=\"#impl-Alpha%3CHsl%3CS,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><a href=\"#impl-Alpha%3CHsl%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CS,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><a href=\"#impl-Alpha%3CHsl%3CS,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#191-243\">source</a><a href=\"#impl-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hsla\"></span><a href=\"palette/type.Hsla.html\" title=\"type palette::Hsla\"><code>Hsla</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#193-195\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HSL color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#200-205\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HSL color with transparency. This is the same as <code>Hsla::new</code>\nwithout the generic hue type. It’s temporary until <code>const fn</code> supports\ntraits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#207-216\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#219-225\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#228-235\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, lightness, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#238-242\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, lightness, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, lightness, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><a href=\"#impl-Alpha%3CHsl%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsl/struct.Iter.html\" title=\"struct palette::hsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, S&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CSrgb,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#175-188\">source</a><a href=\"#impl-Alpha%3CHsl%3CSrgb,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hsla\"></span><a href=\"palette/type.Hsla.html\" title=\"type palette::Hsla\"><code>Hsla</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_srgb\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#178-180\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_srgb\" class=\"fn\">new_srgb</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an sRGB HSL color with transparency. This method can be used\ninstead of <code>Hsla::new</code> to help type inference.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_srgb_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#185-187\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_srgb_const\" class=\"fn\">new_srgb_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an sRGB HSL color with transparency. This is the same as\n<code>Hsla::new_srgb</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsluv%3CWp,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><a href=\"#impl-Alpha%3CHsluv%3CWp,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsluv%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><a href=\"#impl-Alpha%3CHsluv%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsluv%3CWp,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><a href=\"#impl-Alpha%3CHsluv%3CWp,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#114-144\">source</a><a href=\"#impl-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hsluva\"></span><a href=\"palette/type.Hsluva.html\" title=\"type palette::Hsluva\"><code>Hsluva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#116-118\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(hue: H, saturation: T, l: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HSLuv color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#123-128\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(hue: <a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, saturation: T, l: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HSLuv color with transparency. This is the same as\n<code>Hsluva::new</code> without the generic hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#131-138\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, l, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#141-143\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, l, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, l, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsluv%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><a href=\"#impl-Alpha%3CHsluv%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsluv/struct.Iter.html\" title=\"struct palette::hsluv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, Wp&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CS,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><a href=\"#impl-Alpha%3CHsv%3CS,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><a href=\"#impl-Alpha%3CHsv%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CS,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><a href=\"#impl-Alpha%3CHsv%3CS,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#190-243\">source</a><a href=\"#impl-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hsva\"></span><a href=\"palette/type.Hsva.html\" title=\"type palette::Hsva\"><code>Hsva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#192-194\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HSV color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#199-204\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HSV color with transparency. This is the same as <code>Hsva::new</code>\nwithout the generic hue type. It’s temporary until <code>const fn</code> supports\ntraits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#207-216\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#219-225\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#228-235\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, value, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#238-242\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, value, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, value, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><a href=\"#impl-Alpha%3CHsv%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsv/struct.Iter.html\" title=\"struct palette::hsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, S&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CSrgb,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#174-187\">source</a><a href=\"#impl-Alpha%3CHsv%3CSrgb,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hsva\"></span><a href=\"palette/type.Hsva.html\" title=\"type palette::Hsva\"><code>Hsva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_srgb\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#177-179\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_srgb\" class=\"fn\">new_srgb</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an sRGB HSV color with transparency. This method can be used\ninstead of <code>Hsva::new</code> to help type inference.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_srgb_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#184-186\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_srgb_const\" class=\"fn\">new_srgb_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an sRGB HSV color with transparency. This is the same as\n<code>Hsva::new_srgb</code> without the generic hue type. It’s temporary until\n<code>const fn</code> supports traits.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CS,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><a href=\"#impl-Alpha%3CHwb%3CS,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><a href=\"#impl-Alpha%3CHwb%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CS,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><a href=\"#impl-Alpha%3CHwb%3CS,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#197-249\">source</a><a href=\"#impl-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hwba\"></span><a href=\"palette/type.Hwba.html\" title=\"type palette::Hwba\"><code>Hwba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#199-201\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HWB color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#205-210\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an HWB color with transparency. This is the same as <code>Hwba::new</code> without the\ngeneric hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#213-222\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#225-231\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#234-241\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, whiteness, blackness, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#244-248\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, whiteness, blackness, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, whiteness, blackness, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><a href=\"#impl-Alpha%3CHwb%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hwb/struct.Iter.html\" title=\"struct palette::hwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, S&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CSrgb,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#181-194\">source</a><a href=\"#impl-Alpha%3CHwb%3CSrgb,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hwba\"></span><a href=\"palette/type.Hwba.html\" title=\"type palette::Hwba\"><code>Hwba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_srgb\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#184-186\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_srgb\" class=\"fn\">new_srgb</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an sRGB HWB color with transparency. This method can be used\ninstead of <code>Hwba::new</code> to help type inference.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_srgb_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#191-193\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_srgb_const\" class=\"fn\">new_srgb_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an sRGB HWB color with transparency. This is the same as\n<code>Hwba::new_srgb</code> without the generic hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLab%3CWp,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><a href=\"#impl-Alpha%3CLab%3CWp,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLab%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><a href=\"#impl-Alpha%3CLab%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#150\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLab%3CWp,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><a href=\"#impl-Alpha%3CLab%3CWp,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#130-148\">source</a><a href=\"#impl-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Laba\"></span><a href=\"palette/type.Laba.html\" title=\"type palette::Laba\"><code>Laba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#132-137\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(l: T, a: T, b: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE L*a*b* with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#140-142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L\\*, a\\*, b\\*, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#145-147\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((l, a, b, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L\\*, a\\*, b\\*, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLab%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><a href=\"#impl-Alpha%3CLab%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lab/struct.Iter.html\" title=\"struct palette::lab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, Wp&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLch%3CWp,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><a href=\"#impl-Alpha%3CLch%3CWp,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLch%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><a href=\"#impl-Alpha%3CLch%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLch%3CWp,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><a href=\"#impl-Alpha%3CLch%3CWp,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#124-149\">source</a><a href=\"#impl-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Lcha\"></span><a href=\"palette/type.Lcha.html\" title=\"type palette::Lcha\"><code>Lcha</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#126-128\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE L*C*h° color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#133-138\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(l: T, chroma: T, hue: <a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE L*C*h° color with transparency. This is the same as\n<code>Lcha::new</code> without the generic hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#141-143\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L\\*, C\\*, h°, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#146-148\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;&gt;&gt;(\n    (l, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L\\*, C\\*, h°, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLch%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><a href=\"#impl-Alpha%3CLch%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#152\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lch/struct.Iter.html\" title=\"struct palette::lch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, Wp&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLchuv%3CWp,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><a href=\"#impl-Alpha%3CLchuv%3CWp,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLchuv%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><a href=\"#impl-Alpha%3CLchuv%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLchuv%3CWp,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><a href=\"#impl-Alpha%3CLchuv%3CWp,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#114-139\">source</a><a href=\"#impl-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Lchuva\"></span><a href=\"palette/type.Lchuva.html\" title=\"type palette::Lchuva\"><code>Lchuva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#116-118\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE L*C*uv h°uv color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#123-128\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(l: T, chroma: T, hue: <a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE L*C*uv h°uv color with transparency. This is the same as\n<code>Lchuva::new</code> without the generic hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#131-133\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L\\*, C\\*uv, h°uv, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#136-138\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(\n    (l, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L\\*, C\\*uv, h°uv, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLchuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><a href=\"#impl-Alpha%3CLchuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#142\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lchuv/struct.Iter.html\" title=\"struct palette::lchuv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, Wp&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLms%3CM,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><a href=\"#impl-Alpha%3CLms%3CM,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLms%3CM,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><a href=\"#impl-Alpha%3CLms%3CM,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#343\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLms%3CM,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><a href=\"#impl-Alpha%3CLms%3CM,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLms%3CM,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><a href=\"#impl-Alpha%3CLms%3CM,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Iter.html\" title=\"struct palette::lms::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, M&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, M&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLms%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#195-270\">source</a><a href=\"#impl-Alpha%3CLms%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Lmsa\"></span><a href=\"palette/lms/type.Lmsa.html\" title=\"type palette::lms::Lmsa\"><code>Lmsa</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#197-202\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(red: T, green: T, blue: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an LMSA color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#214-223\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the LMSA components into other number types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{\n    lms::VonKriesLmsa,\n    white_point::D65,\n};\n\n<span class=\"kw\">let </span>lmsa_f64: VonKriesLmsa&lt;D65, f64&gt; = VonKriesLmsa::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.7</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.5</span>).into_format();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#235-241\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the LMSA components from other number types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{\n    lms::VonKriesLmsa,\n    white_point::D65,\n};\n\n<span class=\"kw\">let </span>lmsa_f64 = VonKriesLmsa::&lt;D65, f64&gt;::from_format(VonKriesLmsa::new(<span class=\"number\">0.3f32</span>, <span class=\"number\">0.7</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#244-251\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(long, medium, short, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#254-256\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((long, medium, short, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(long, medium, short, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_meta\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#264-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_meta\" class=\"fn\">with_meta</a>&lt;NewM&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;NewM, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Changes the meta type without changing the color value.</p>\n<p>This function doesn’t change the numerical values, and thus the stimuli\nit represents in an absolute sense. However, the appearance of the color\nmay not be the same. The effect may be similar to taking a photo with an\nincorrect white balance.</p>\n</div></details></div></details>",0,"palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CLinear%3CWp%3E,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#465-511\">source</a><a href=\"#impl-Alpha%3CLuma%3CLinear%3CWp%3E,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;Wp&gt;, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#480-487\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_encoding\" class=\"fn\">into_encoding</a>&lt;U, B, St&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;St, U&gt;, B&gt;<div class=\"where\">where\n    St: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = Wp&gt;,\n    St::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;T, U&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert a linear color to a different encoding with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLumaa, LinLumaa};\n\n<span class=\"kw\">let </span>encoded: SrgbLumaa&lt;u8&gt; = LinLumaa::new(<span class=\"number\">0.95f32</span>, <span class=\"number\">0.75</span>).into_encoding();</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#503-510\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_encoding\" class=\"fn\">from_encoding</a>&lt;U, B, St&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;St, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    St: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = Wp&gt;,\n    St::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;T, U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert to linear luminance from a different encoding with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLumaa, LinLumaa};\n\n<span class=\"kw\">let </span>linear = LinLumaa::&lt;<span class=\"kw\">_</span>, f32&gt;::from_encoding(SrgbLumaa::new(<span class=\"number\">96u8</span>, <span class=\"number\">38</span>));</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#513\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#311-350\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Lumaa\"></span><a href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\"><code>Lumaa</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#313-318\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(luma: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a luminance color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#321-330\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#333-339\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#342-344\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(luma, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#347-349\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((luma, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(luma, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#410-463\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#428-437\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_linear\" class=\"fn\">into_linear</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;, U&gt;, B&gt;<div class=\"where\">where\n    S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;U, T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the color to linear luminance with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLumaa, LinLumaa};\n\n<span class=\"kw\">let </span>linear: LinLumaa&lt;<span class=\"kw\">_</span>, f32&gt; = SrgbLumaa::new(<span class=\"number\">96u8</span>, <span class=\"number\">38</span>).into_linear();</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#453-462\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_linear\" class=\"fn\">from_linear</a>&lt;U, B&gt;(\n    color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;, U&gt;, B&gt;,\n) -&gt; Self<div class=\"where\">where\n    S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.TransferFn\" title=\"type palette::luma::LumaStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;U, T&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert linear luminance to non-linear luminance with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/luma/struct.Luma.html#method.into_format\" title=\"method palette::luma::Luma::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{SrgbLumaa, LinLumaa};\n\n<span class=\"kw\">let </span>encoded = SrgbLumaa::&lt;u8&gt;::from_linear(LinLumaa::new(<span class=\"number\">0.95f32</span>, <span class=\"number\">0.75</span>));</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#514\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, S&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuv%3CWp,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><a href=\"#impl-Alpha%3CLuv%3CWp,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuv%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><a href=\"#impl-Alpha%3CLuv%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuv%3CWp,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><a href=\"#impl-Alpha%3CLuv%3CWp,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#120-138\">source</a><a href=\"#impl-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Luva\"></span><a href=\"palette/type.Luva.html\" title=\"type palette::Luva\"><code>Luva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#122-127\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(l: T, u: T, v: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE L*u*v* color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#130-132\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to u <code>(L\\*, u\\*, v\\*, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#135-137\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((l, u, v, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from u <code>(L\\*, u\\*, v\\*, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><a href=\"#impl-Alpha%3CLuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luv/struct.Iter.html\" title=\"struct palette::luv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, Wp&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsl%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><a href=\"#impl-Alpha%3COkhsl%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsl%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><a href=\"#impl-Alpha%3COkhsl%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#156\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsl%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><a href=\"#impl-Alpha%3COkhsl%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsl%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/alpha.rs.html#10-65\">source</a><a href=\"#impl-Alpha%3COkhsl%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Okhsla\"></span><a href=\"palette/okhsl/type.Okhsla.html\" title=\"type palette::okhsl::Okhsla\"><code>Okhsla</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl/alpha.rs.html#12-17\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Okhsl</code> color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl/alpha.rs.html#21-26\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Okhsla</code> color. This is the same as <code>Okhsla::new</code> without the\ngeneric hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl/alpha.rs.html#29-38\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl/alpha.rs.html#41-47\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl/alpha.rs.html#50-57\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, lightness, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl/alpha.rs.html#60-64\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, lightness, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, lightness, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsl%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><a href=\"#impl-Alpha%3COkhsl%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsl.rs.html#157\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsl/struct.Iter.html\" title=\"struct palette::okhsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsv%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><a href=\"#impl-Alpha%3COkhsv%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsv%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><a href=\"#impl-Alpha%3COkhsv%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#126\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsv%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><a href=\"#impl-Alpha%3COkhsv%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsv%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/alpha.rs.html#13-69\">source</a><a href=\"#impl-Alpha%3COkhsv%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Hsva\"></span><a href=\"palette/type.Hsva.html\" title=\"type palette::Hsva\"><code>Hsva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv/alpha.rs.html#15-20\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Okhsv</code> color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv/alpha.rs.html#24-29\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Okhsva</code> color. This is the same as <code>Okhsva::new</code> without the\ngeneric hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv/alpha.rs.html#32-41\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv/alpha.rs.html#44-51\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,\n    U: <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.MinMax.html\" title=\"trait palette::num::MinMax\">MinMax</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv/alpha.rs.html#54-61\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, value, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv/alpha.rs.html#64-68\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, value, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, value, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhsv%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><a href=\"#impl-Alpha%3COkhsv%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsv/struct.Iter.html\" title=\"struct palette::okhsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhwb%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><a href=\"#impl-Alpha%3COkhwb%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhwb%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><a href=\"#impl-Alpha%3COkhwb%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#129\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhwb%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><a href=\"#impl-Alpha%3COkhwb%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhwb%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/alpha.rs.html#11-66\">source</a><a href=\"#impl-Alpha%3COkhwb%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Okhwba\"></span><a href=\"palette/okhwb/type.Okhwba.html\" title=\"type palette::okhwb::Okhwba\"><code>Okhwba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb/alpha.rs.html#13-18\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Okhwb</code> color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb/alpha.rs.html#22-27\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(\n    hue: <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Okhwba</code> color. This is the same as <code>Okhwba::new</code> without the\ngeneric hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb/alpha.rs.html#30-39\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb/alpha.rs.html#42-48\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt; + <a class=\"trait\" href=\"palette/angle/trait.FromAngle.html\" title=\"trait palette::angle::FromAngle\">FromAngle</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb/alpha.rs.html#51-58\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, whiteness, blackness, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb/alpha.rs.html#61-65\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, whiteness, blackness, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, whiteness, blackness, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COkhwb%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><a href=\"#impl-Alpha%3COkhwb%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/okhwb.rs.html#130\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhwb/struct.Iter.html\" title=\"struct palette::okhwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklab%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><a href=\"#impl-Alpha%3COklab%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklab%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><a href=\"#impl-Alpha%3COklab%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#243\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklab%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><a href=\"#impl-Alpha%3COklab%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/alpha.rs.html#8-26\">source</a><a href=\"#impl-Alpha%3COklab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Oklaba\"></span><a href=\"palette/oklab/type.Oklaba.html\" title=\"type palette::oklab::Oklaba\"><code>Oklaba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab/alpha.rs.html#10-15\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(l: T, a: T, b: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an Oklab color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab/alpha.rs.html#18-20\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L, a, b, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab/alpha.rs.html#23-25\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((l, a, b, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L, a, b, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklab%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><a href=\"#impl-Alpha%3COklab%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#244\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklab/struct.Iter.html\" title=\"struct palette::oklab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklch%3C%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><a href=\"#impl-Alpha%3COklch%3C%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklch%3C%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><a href=\"#impl-Alpha%3COklch%3C%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#105\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklch%3CCt%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><a href=\"#impl-Alpha%3COklch%3CCt%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;&amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;&amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch/alpha.rs.html#10-37\">source</a><a href=\"#impl-Alpha%3COklch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Oklcha\"></span><a href=\"palette/oklch/type.Oklcha.html\" title=\"type palette::oklch::Oklcha\"><code>Oklcha</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch/alpha.rs.html#12-17\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an Oklch color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_const\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch/alpha.rs.html#21-26\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new_const\" class=\"fn\">new_const</a>(l: T, chroma: T, hue: <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Oklcha</code> color. This is the same as <code>Oklcha::new</code> without the\ngeneric hue type. It’s temporary until <code>const fn</code> supports traits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch/alpha.rs.html#29-31\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L, C, h, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch/alpha.rs.html#34-36\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    (l, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L, C, h, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklch%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><a href=\"#impl-Alpha%3COklch%3CVec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#106\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklch/struct.Iter.html\" title=\"struct palette::oklch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CLinear%3CS%3E,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#691-737\">source</a><a href=\"#impl-Alpha%3CRgb%3CLinear%3CS%3E,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbSpace.html\" title=\"trait palette::rgb::RgbSpace\">RgbSpace</a>, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S&gt;, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#706-713\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_encoding\" class=\"fn\">into_encoding</a>&lt;U, B, St&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;St, U&gt;, B&gt;<div class=\"where\">where\n    St: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>&lt;Space = S&gt;,\n    St::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.TransferFn\" title=\"type palette::rgb::RgbStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;T, U&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert a linear color to a different encoding with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/rgb/struct.Rgb.html#method.into_format\" title=\"method palette::rgb::Rgb::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, LinSrgba};\n\n<span class=\"kw\">let </span>encoded: Srgba&lt;u8&gt; = LinSrgba::new(<span class=\"number\">0.95f32</span>, <span class=\"number\">0.90</span>, <span class=\"number\">0.30</span>, <span class=\"number\">0.75</span>).into_encoding();</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#729-736\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_encoding\" class=\"fn\">from_encoding</a>&lt;U, B, St&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;St, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    St: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>&lt;Space = S&gt;,\n    St::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.TransferFn\" title=\"type palette::rgb::RgbStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;T, U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert RGB from a different encoding to linear with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/rgb/struct.Rgb.html#method.into_format\" title=\"method palette::rgb::Rgb::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, LinSrgba};\n\n<span class=\"kw\">let </span>linear = LinSrgba::&lt;f32&gt;::from_encoding(Srgba::new(<span class=\"number\">96u8</span>, <span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">38</span>));</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#739\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#517-579\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Rgba\"></span><a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#519-524\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(red: T, green: T, blue: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an RGBA color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#536-545\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the RGBA components into other number types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::Srgba;\n\n<span class=\"kw\">let </span>rgba_u8: Srgba&lt;u8&gt; = Srgba::new(<span class=\"number\">0.3</span>, <span class=\"number\">0.7</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.5</span>).into_format();</code></pre></div>\n<p>See also <code>into_linear</code> and <code>into_encoding</code> for a faster option if you\nneed to change between linear and non-linear encoding at the same time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#557-563\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;U&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the RGBA components from other number types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::Srgba;\n\n<span class=\"kw\">let </span>rgba_u8 = Srgba::&lt;u8&gt;::from_format(Srgba::new(<span class=\"number\">0.3</span>, <span class=\"number\">0.7</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.5</span>));</code></pre></div>\n<p>See also <code>from_linear</code> and <code>from_encoding</code> for a faster option if you\nneed to change between linear and non-linear encoding at the same time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#566-573\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(red, green, blue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#576-578\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((red, green, blue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(red, green, blue, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#639-689\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#654-663\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_linear\" class=\"fn\">into_linear</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>&gt;, U&gt;, B&gt;<div class=\"where\">where\n    S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.TransferFn\" title=\"type palette::rgb::RgbStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;U, T&gt;,\n    B: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the color to linear RGB with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/rgb/struct.Rgb.html#method.into_format\" title=\"method palette::rgb::Rgb::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, LinSrgba};\n\n<span class=\"kw\">let </span>linear: LinSrgba&lt;f32&gt; = Srgba::new(<span class=\"number\">96u8</span>, <span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">38</span>).into_linear();</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#679-688\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_linear\" class=\"fn\">from_linear</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>&gt;, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.TransferFn\" title=\"type palette::rgb::RgbStandard::TransferFn\">TransferFn</a>: <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;U, T&gt;,\n    A: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert linear RGB to non-linear RGB with transparency.</p>\n<p>Some transfer functions allow the component type to be converted at the\nsame time. This is usually offered with increased performance, compared\nto using <a href=\"palette/rgb/struct.Rgb.html#method.into_format\" title=\"method palette::rgb::Rgb::into_format\"><code>into_format</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>palette::{Srgba, LinSrgba};\n\n<span class=\"kw\">let </span>encoded = Srgba::&lt;u8&gt;::from_linear(LinSrgba::new(<span class=\"number\">0.95f32</span>, <span class=\"number\">0.90</span>, <span class=\"number\">0.30</span>, <span class=\"number\">0.75</span>));</code></pre></div>\n<p>See the transfer function types in the <a href=\"palette/encoding/index.html\" title=\"mod palette::encoding\"><code>encoding</code></a>\nmodule for details and performance characteristics.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#740\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Iter.html\" title=\"struct palette::rgb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, S&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CXyz%3CWp,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><a href=\"#impl-Alpha%3CXyz%3CWp,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CXyz%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><a href=\"#impl-Alpha%3CXyz%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#232\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CXyz%3CWp,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><a href=\"#impl-Alpha%3CXyz%3CWp,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#198-230\">source</a><a href=\"#impl-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Xyza\"></span><a href=\"palette/type.Xyza.html\" title=\"type palette::Xyza\"><code>Xyza</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#200-205\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(x: T, y: T, z: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE XYZ color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#208-210\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(X, Y, Z, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#213-215\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((x, y, z, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(X, Y, Z, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_white_point\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#227-229\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_white_point\" class=\"fn\">with_white_point</a>&lt;NewWp&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;NewWp, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Changes the reference white point without changing the color value.</p>\n<p>This function doesn’t change the numerical values, and thus the color it\nrepresents in an absolute sense. However, the appearance of the color\nmay not be the same when observed with the new white point. The effect\nwould be similar to taking a photo with an incorrect white balance.</p>\n<p>See <a href=\"palette/chromatic_adaptation/index.html\" title=\"mod palette::chromatic_adaptation\">chromatic_adaptation</a> for operations\nthat can change the white point while preserving the color’s appearance.</p>\n</div></details></div></details>",0,"palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CXyz%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><a href=\"#impl-Alpha%3CXyz%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#233\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/xyz/struct.Iter.html\" title=\"struct palette::xyz::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, Wp&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CYxy%3CWp,+%26T%3E,+%26A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><a href=\"#impl-Alpha%3CYxy%3CWp,+%26T%3E,+%26A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CYxy%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><a href=\"#impl-Alpha%3CYxy%3CWp,+%26mut+T%3E,+%26mut+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut A</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Update this color with new values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_refs\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.as_refs\" class=\"fn\">as_refs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;A</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Borrow this color’s components as shared references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.copied\" class=\"fn\">copied</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, copied version of this color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.cloned\" class=\"fn\">cloned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get an owned, cloned version of this color.</p>\n</div></details></div></details>",0,"palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CYxy%3CWp,+Ct%3E,+Ca%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><a href=\"#impl-Alpha%3CYxy%3CWp,+Ct%3E,+Ca%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, Ct, Ca&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, Ct&gt;, Ca&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, I, T, A&gt;(\n    &amp;'a self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, with references to the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get\" title=\"method slice::get\"><code>slice::get</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;'a, I, T, A&gt;(\n    &amp;'a mut self,\n    index: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;, &amp;mut &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;&gt;<div class=\"where\">where\n    T: 'a,\n    A: 'a,\n    Ct: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;,\n    Ca: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[A]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Get a color, or slice of colors, that allows modifying the components at <code>index</code>. See <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html#method.get_mut\" title=\"method slice::get_mut\"><code>slice::get_mut</code></a> for details.</p>\n</div></details></div></details>",0,"palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#129-161\">source</a><a href=\"#impl-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Yxya\"></span><a href=\"palette/type.Yxya.html\" title=\"type palette::Yxya\"><code>Yxya</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#131-136\">source</a><h4 class=\"code-header\">pub const fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(x: T, y: T, luma: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a CIE Yxy color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#139-141\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((x, y, luma, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_white_point\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#158-160\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_white_point\" class=\"fn\">with_white_point</a>&lt;NewWp&gt;(self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;NewWp, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Changes the reference white point without changing the color value.</p>\n<p>This function doesn’t change the numerical values, and thus the color it\nrepresents in an absolute sense. However, the appearance of the color\nmay not be the same when observed with the new white point. The effect\nwould be similar to taking a photo with an incorrect white balance.</p>\n<p>See <a href=\"palette/chromatic_adaptation/index.html\" title=\"mod palette::chromatic_adaptation\">chromatic_adaptation</a> for operations\nthat can change the white point while preserving the color’s appearance.</p>\n</div></details></div></details>",0,"palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CYxy%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><a href=\"#impl-Alpha%3CYxy%3CWp,+Vec%3CT%3E%3E,+Vec%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a struct of vectors with a minimum capacity. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.with_capacity\" title=\"associated function alloc::vec::Vec::with_capacity\"><code>Vec::with_capacity</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Push an additional color’s components onto the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.push\" title=\"method alloc::vec::Vec::push\"><code>Vec::push</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop a color’s components from the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.pop\" title=\"method alloc::vec::Vec::pop\"><code>Vec::pop</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the component vectors. See <a href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html#method.clear\" title=\"method alloc::vec::Vec::clear\"><code>Vec::clear</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/alpha/struct.Alpha.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/yxy/struct.Iter.html\" title=\"struct palette::yxy::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/drain/struct.Drain.html\" title=\"struct alloc::vec::drain::Drain\">Drain</a>&lt;'_, A&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;Iter&lt;Drain&lt;&#39;_, T&gt;, Wp&gt;, Drain&lt;&#39;_, A&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator that moves colors out of the specified range.</p>\n</div></details></div></details>",0,"palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayCast-for-Alpha%3CC,+%3C%3CC+as+ArrayCast%3E::Array+as+ArrayExt%3E::Item%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#437-443\">source</a><a href=\"#impl-ArrayCast-for-Alpha%3CC,+%3C%3CC+as+ArrayCast%3E::Array+as+ArrayExt%3E::Item%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, &lt;&lt;C as <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&gt;::<a class=\"associatedtype\" href=\"palette/cast/trait.ArrayCast.html#associatedtype.Array\" title=\"type palette::cast::ArrayCast::Array\">Array</a> as <a class=\"trait\" href=\"palette/trait.ArrayExt.html\" title=\"trait palette::ArrayExt\">ArrayExt</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.ArrayExt.html#associatedtype.Item\" title=\"type palette::ArrayExt::Item\">Item</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>,\n    C::<a class=\"associatedtype\" href=\"palette/cast/trait.ArrayCast.html#associatedtype.Array\" title=\"type palette::cast::ArrayCast::Array\">Array</a>: <a class=\"trait\" href=\"palette/trait.NextArray.html\" title=\"trait palette::NextArray\">NextArray</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Array\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Array\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/cast/trait.ArrayCast.html#associatedtype.Array\" class=\"associatedtype\">Array</a> = &lt;&lt;C as <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&gt;::<a class=\"associatedtype\" href=\"palette/cast/trait.ArrayCast.html#associatedtype.Array\" title=\"type palette::cast::ArrayCast::Array\">Array</a> as <a class=\"trait\" href=\"palette/trait.NextArray.html\" title=\"trait palette::NextArray\">NextArray</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.NextArray.html#associatedtype.Next\" title=\"type palette::NextArray::Next\">Next</a></h4></section></summary><div class='docblock'>The output type of a cast to an array.</div></details></div></details>","ArrayCast","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;: <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&lt;Array = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT;+N%5D%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#impl-AsMut%3C%5BT;+N%5D%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;: <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&lt;Array = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T; N]>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;: <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&lt;Array = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT;+N%5D%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#impl-AsRef%3C%5BT;+N%5D%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;: <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&lt;Array = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T; N]>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Blend-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#229-289\">source</a><a href=\"#impl-Blend-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"palette/blend/trait.Blend.html\" title=\"trait palette::blend::Blend\">Blend</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/blend/trait.Premultiply.html\" title=\"trait palette::blend::Premultiply\">Premultiply</a>&lt;Scalar = T&gt; + <a class=\"trait\" href=\"palette/stimulus/trait.StimulusColor.html\" title=\"trait palette::stimulus::StimulusColor\">StimulusColor</a> + <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&lt;Array = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: <a class=\"trait\" href=\"palette/num/trait.Real.html\" title=\"trait palette::num::Real\">Real</a> + <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.One.html\" title=\"trait palette::num::One\">One</a> + <a class=\"trait\" href=\"palette/num/trait.MinMax.html\" title=\"trait palette::num::MinMax\">MinMax</a> + <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a> + <a class=\"trait\" href=\"palette/num/trait.Sqrt.html\" title=\"trait palette::num::Sqrt\">Sqrt</a> + <a class=\"trait\" href=\"palette/num/trait.Abs.html\" title=\"trait palette::num::Abs\">Abs</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"palette/num/trait.PartialCmp.html\" title=\"trait palette::num::PartialCmp\">PartialCmp</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>: <a class=\"trait\" href=\"palette/bool_mask/trait.LazySelect.html\" title=\"trait palette::bool_mask::LazySelect\">LazySelect</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#236-238\">source</a><a href=\"#method.multiply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.multiply\" class=\"fn\">multiply</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Multiply <code>self</code> with <code>other</code>. This uses the alpha component to regulate\nthe effect, so it’s not just plain component wise multiplication.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.screen\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#241-243\">source</a><a href=\"#method.screen\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.screen\" class=\"fn\">screen</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Make a color which is at least as light as <code>self</code> or <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overlay\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#246-248\">source</a><a href=\"#method.overlay\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.overlay\" class=\"fn\">overlay</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Multiply <code>self</code> or <code>other</code> if other is dark, or screen them if <code>other</code>\nis light. This results in an S curve.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.darken\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#251-253\">source</a><a href=\"#method.darken\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.darken\" class=\"fn\">darken</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Return the darkest parts of <code>self</code> and <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#256-258\">source</a><a href=\"#method.lighten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.lighten\" class=\"fn\">lighten</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Return the lightest parts of <code>self</code> and <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dodge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#261-263\">source</a><a href=\"#method.dodge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.dodge\" class=\"fn\">dodge</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Lighten <code>other</code> to reflect <code>self</code>. Results in <code>other</code> if <code>self</code> is\nblack.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#266-268\">source</a><a href=\"#method.burn\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.burn\" class=\"fn\">burn</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Darken <code>other</code> to reflect <code>self</code>. Results in <code>other</code> if <code>self</code> is\nwhite.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hard_light\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#271-273\">source</a><a href=\"#method.hard_light\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.hard_light\" class=\"fn\">hard_light</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Multiply <code>self</code> or <code>other</code> if other is dark, or screen them if <code>self</code>\nis light. This is similar to <code>overlay</code>, but depends on <code>self</code> instead\nof <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.soft_light\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#276-278\">source</a><a href=\"#method.soft_light\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.soft_light\" class=\"fn\">soft_light</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Lighten <code>other</code> if <code>self</code> is light, or darken <code>other</code> as if it’s burned\nif <code>self</code> is dark. The effect is increased if the components of <code>self</code>\nis further from 0.5.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#281-283\">source</a><a href=\"#method.difference\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.difference\" class=\"fn\">difference</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Return the absolute difference between <code>self</code> and <code>other</code>. It’s\nbasically <code>abs(self - other)</code>, but regulated by the alpha component.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exclusion\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#286-288\">source</a><a href=\"#method.exclusion\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.exclusion\" class=\"fn\">exclusion</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Similar to <code>difference</code>, but appears to result in a lower contrast.\n<code>other</code> is inverted if <code>self</code> is white, and preserved if <code>self</code> is\nblack.</div></details></div></details>","Blend","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlendWith-for-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend_with.rs.html#57-71\">source</a><a href=\"#impl-BlendWith-for-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"palette/blend/trait.BlendWith.html\" title=\"trait palette::blend::BlendWith\">BlendWith</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/blend/trait.Premultiply.html#associatedtype.Scalar\" title=\"type palette::blend::Premultiply::Scalar\">Scalar</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/blend/trait.Premultiply.html\" title=\"trait palette::blend::Premultiply\">Premultiply</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Color\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Color\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/blend/trait.BlendWith.html#associatedtype.Color\" class=\"associatedtype\">Color</a> = C</h4></section></summary><div class='docblock'>The base color type of <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blend_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend_with.rs.html#63-70\">source</a><a href=\"#method.blend_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.BlendWith.html#tymethod.blend_with\" class=\"fn\">blend_with</a>&lt;F&gt;(self, destination: Self, blend_function: F) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"palette/blend/trait.BlendFunction.html\" title=\"trait palette::blend::BlendFunction\">BlendFunction</a>&lt;Self::<a class=\"associatedtype\" href=\"palette/blend/trait.BlendWith.html#associatedtype.Color\" title=\"type palette::blend::BlendWith::Color\">Color</a>&gt;,</div></h4></section></summary><div class='docblock'>Blend self, as the source color, with <code>destination</code>, using\n<code>blend_function</code>. Anything that implements <a href=\"palette/blend/trait.BlendFunction.html\" title=\"trait palette::blend::BlendFunction\"><code>BlendFunction</code></a> is\nacceptable, including functions and closures. <a href=\"palette/blend/trait.BlendWith.html#tymethod.blend_with\">Read more</a></div></details></div></details>","BlendWith","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clamp-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#411-423\">source</a><a href=\"#impl-Clamp-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/trait.Clamp.html\" title=\"trait palette::Clamp\">Clamp</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.Clamp.html\" title=\"trait palette::Clamp\">Clamp</a>,\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a> + <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#417-422\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Clamp.html#tymethod.clamp\" class=\"fn\">clamp</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Return a new color where out-of-bounds components have been changed to\nthe nearest valid values. <a href=\"palette/trait.Clamp.html#tymethod.clamp\">Read more</a></div></details></div></details>","Clamp","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClampAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#425-435\">source</a><a href=\"#impl-ClampAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/trait.ClampAssign.html\" title=\"trait palette::ClampAssign\">ClampAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.ClampAssign.html\" title=\"trait palette::ClampAssign\">ClampAssign</a>,\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a> + <a class=\"trait\" href=\"palette/num/trait.ClampAssign.html\" title=\"trait palette::num::ClampAssign\">ClampAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#431-434\">source</a><a href=\"#method.clamp_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.ClampAssign.html#tymethod.clamp_assign\" class=\"fn\">clamp_assign</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Changes out-of-bounds components to the nearest valid values. <a href=\"palette/trait.ClampAssign.html#tymethod.clamp_assign\">Read more</a></div></details></div></details>","ClampAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#129\">source</a><a href=\"#impl-Clone-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#129\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Complementary-for-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#274\">source</a><a href=\"#impl-Complementary-for-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.complementary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#274\">source</a><a href=\"#method.complementary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\" class=\"fn\">complementary</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Return the complementary color of <code>self</code>. <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\">Read more</a></div></details></div></details>","Complementary","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Complementary-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#234\">source</a><a href=\"#impl-Complementary-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.complementary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#234\">source</a><a href=\"#method.complementary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\" class=\"fn\">complementary</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Return the complementary color of <code>self</code>. <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\">Read more</a></div></details></div></details>","Complementary","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Complementary-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#236\">source</a><a href=\"#impl-Complementary-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.complementary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#236\">source</a><a href=\"#method.complementary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\" class=\"fn\">complementary</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Return the complementary color of <code>self</code>. <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\">Read more</a></div></details></div></details>","Complementary","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Complementary-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#36\">source</a><a href=\"#impl-Complementary-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Complementary.html\" title=\"trait palette::color_theory::Complementary\">Complementary</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.complementary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#36\">source</a><a href=\"#method.complementary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\" class=\"fn\">complementary</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Return the complementary color of <code>self</code>. <a href=\"palette/color_theory/trait.Complementary.html#tymethod.complementary\">Read more</a></div></details></div></details>","Complementary","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compose-for-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/blend/compose.rs.html#125-163\">source</a><a href=\"#impl-Compose-for-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"palette/blend/trait.Compose.html\" title=\"trait palette::blend::Compose\">Compose</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/blend/trait.Premultiply.html#associatedtype.Scalar\" title=\"type palette::blend::Premultiply::Scalar\">Scalar</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/blend/trait.Premultiply.html\" title=\"trait palette::blend::Premultiply\">Premultiply</a>,\n    <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C&gt;: <a class=\"trait\" href=\"palette/blend/trait.Compose.html\" title=\"trait palette::blend::Compose\">Compose</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.over\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/compose.rs.html#131-133\">source</a><a href=\"#method.over\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Compose.html#tymethod.over\" class=\"fn\">over</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Place <code>self</code> over <code>other</code>. This is the good old common alpha composition\nequation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inside\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/compose.rs.html#136-140\">source</a><a href=\"#method.inside\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Compose.html#tymethod.inside\" class=\"fn\">inside</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Results in the parts of <code>self</code> that overlaps the visible parts of\n<code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.outside\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/compose.rs.html#143-147\">source</a><a href=\"#method.outside\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Compose.html#tymethod.outside\" class=\"fn\">outside</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Results in the parts of <code>self</code> that lies outside the visible parts of\n<code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/compose.rs.html#150-152\">source</a><a href=\"#method.atop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Compose.html#tymethod.atop\" class=\"fn\">atop</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Place <code>self</code> over only the visible parts of <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/compose.rs.html#155-157\">source</a><a href=\"#method.xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Compose.html#tymethod.xor\" class=\"fn\">xor</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Results in either <code>self</code> or <code>other</code>, where they do not overlap.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.plus\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/compose.rs.html#160-162\">source</a><a href=\"#method.plus\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Compose.html#tymethod.plus\" class=\"fn\">plus</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Add <code>self</code> and <code>other</code>. This uses the alpha component to regulate the\neffect, so it’s not just plain component wise addition.</div></details></div></details>","Compose","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#129\">source</a><a href=\"#impl-Debug-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#129\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#453-460\">source</a><a href=\"#impl-Default-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#454-459\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#226-232\">source</a><a href=\"#impl-Deref-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = C</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#229-231\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#234-238\">source</a><a href=\"#impl-DerefMut-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#235-237\">source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut C</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#966-988\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, C, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#971-987\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.208/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#752-765\">source</a><a href=\"#impl-Div%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#759-764\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#737-750\">source</a><a href=\"#impl-Div-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#744-749\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#778-787\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#783-786\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#767-776\">source</a><a href=\"#impl-DivAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#772-775\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CAlpha%3CTc,+Ta%3E%3E-for-Alpha%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#834-845\">source</a><a href=\"#impl-Extend%3CAlpha%3CTc,+Ta%3E%3E-for-Alpha%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tc, Ta, C, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;Tc, Ta&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, A&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Tc&gt;,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Ta&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#839-844\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;Tc, Ta&gt;&gt;&gt;(&amp;mut self, iter: T)</h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/iter/traits/collect.rs.html#453\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/iter/traits/collect.rs.html#461\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<Alpha<Tc, Ta>>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/full.rs.html#416-419\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/full.rs.html#416-419\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16<T>, T>; N]>","palette::cam16::full::Cam16a"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16Jch%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Jch%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16Jch%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Jch%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16Jch<T>, T>; N]>","palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16Jmh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Jmh%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16Jmh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Jmh%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16Jmh<T>, T>; N]>","palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16Jsh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Jsh%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16Jsh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Jsh%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16Jsh<T>, T>; N]>","palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16Qch%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Qch%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16Qch%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Qch%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16Qch<T>, T>; N]>","palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16Qmh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Qmh%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16Qmh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Qmh%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16Qmh<T>, T>; N]>","palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16Qsh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Qsh%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16Qsh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16Qsh%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16Qsh<T>, T>; N]>","palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16UcsJab%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16UcsJab%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#282\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16UcsJab%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16UcsJab%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#282\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16UcsJab<T>, T>; N]>","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CCam16UcsJmh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16UcsJmh%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#282\">source</a><a href=\"#impl-From%3C%5BAlpha%3CCam16UcsJmh%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3CCam16UcsJmh%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#282\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Cam16UcsJmh<T>, T>; N]>","palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CHsl%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHsl%3CS,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#491\">source</a><a href=\"#impl-From%3C%5BAlpha%3CHsl%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHsl%3CS,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#491\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Hsl<S, T>, T>; N]>","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CHsluv%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHsluv%3CWp,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#217\">source</a><a href=\"#impl-From%3C%5BAlpha%3CHsluv%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHsluv%3CWp,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#217\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Hsluv<Wp, T>, T>; N]>","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CHsv%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHsv%3CS,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#498\">source</a><a href=\"#impl-From%3C%5BAlpha%3CHsv%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHsv%3CS,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#498\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Hsv<S, T>, T>; N]>","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CHwb%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHwb%3CS,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#323\">source</a><a href=\"#impl-From%3C%5BAlpha%3CHwb%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CHwb%3CS,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#323\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Hwb<S, T>, T>; N]>","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CLab%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLab%3CWp,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#350\">source</a><a href=\"#impl-From%3C%5BAlpha%3CLab%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLab%3CWp,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#350\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Lab<Wp, T>, T>; N]>","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CLch%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLch%3CWp,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#296\">source</a><a href=\"#impl-From%3C%5BAlpha%3CLch%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLch%3CWp,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#296\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Lch<Wp, T>, T>; N]>","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CLchuv%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLchuv%3CWp,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#227\">source</a><a href=\"#impl-From%3C%5BAlpha%3CLchuv%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLchuv%3CWp,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#227\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Lchuv<Wp, T>, T>; N]>","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CLms%3CM,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLms%3CM,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#375\">source</a><a href=\"#impl-From%3C%5BAlpha%3CLms%3CM,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLms%3CM,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#375\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Lms<M, T>, T>; N]>","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CLuma%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLuma%3CS,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#756\">source</a><a href=\"#impl-From%3C%5BAlpha%3CLuma%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLuma%3CS,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#756\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Luma<S, T>, T>; N]>","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CLuv%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLuv%3CWp,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#271\">source</a><a href=\"#impl-From%3C%5BAlpha%3CLuv%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CLuv%3CWp,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#271\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Luv<Wp, T>, T>; N]>","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3COkhsl%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COkhsl%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#40\">source</a><a href=\"#impl-From%3C%5BAlpha%3COkhsl%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COkhsl%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#40\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Okhsl<T>, T>; N]>","palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3COkhsv%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COkhsv%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#35\">source</a><a href=\"#impl-From%3C%5BAlpha%3COkhsv%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COkhsv%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#35\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Okhsv<T>, T>; N]>","palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3COkhwb%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COkhwb%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#26\">source</a><a href=\"#impl-From%3C%5BAlpha%3COkhwb%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COkhwb%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#26\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Okhwb<T>, T>; N]>","palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3COklab%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COklab%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#55\">source</a><a href=\"#impl-From%3C%5BAlpha%3COklab%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COklab%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#55\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Oklab<T>, T>; N]>","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3COklch%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COklch%3CV%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#35\">source</a><a href=\"#impl-From%3C%5BAlpha%3COklch%3CT%3E,+T%3E;+N%5D%3E-for-Alpha%3COklch%3CV%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#35\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Oklch<T>, T>; N]>","palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CRgb%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CRgb%3CS,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1026\">source</a><a href=\"#impl-From%3C%5BAlpha%3CRgb%3CS,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CRgb%3CS,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1026\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Rgb<S, T>, T>; N]>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CXyz%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CXyz%3CWp,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#498\">source</a><a href=\"#impl-From%3C%5BAlpha%3CXyz%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CXyz%3CWp,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#498\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Xyz<Wp, T>, T>; N]>","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BAlpha%3CYxy%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CYxy%3CWp,+V%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#269\">source</a><a href=\"#impl-From%3C%5BAlpha%3CYxy%3CWp,+T%3E,+T%3E;+N%5D%3E-for-Alpha%3CYxy%3CWp,+V%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, V&gt;, V&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    V: <a class=\"trait\" href=\"palette/num/trait.FromScalarArray.html\" title=\"trait palette::num::FromScalarArray\">FromScalarArray</a>&lt;N, Scalar = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#269\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(colors: [<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, T&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Alpha<Yxy<Wp, T>, T>; N]>","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;: <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>&lt;Array = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#789\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; N]>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#443\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#443\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#173\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#173\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#454\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#454\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#290\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#290\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3COkhsv%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#78\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3COkhsv%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsv.rs.html#78\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+A)%3E-for-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#558\">source</a><a href=\"#impl-From%3C(T,+A)%3E-for-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#558\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, A)>","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Jch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Jch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Jmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Jmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Jsh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Jsh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Qch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Qch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Qmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Qmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Qsh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16Qsh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16UcsJmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#252\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CCam16UcsJmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/hues/struct.Cam16Hue.html\" title=\"struct palette::hues::Cam16Hue\">Cam16Hue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#252\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#175\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#175\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#183\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#183\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3COklch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#126\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3COklch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#126\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#249\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#249\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#209\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#209\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLms%3CM,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#373\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLms%3CM,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#373\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#211\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#211\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#506\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#506\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1024\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1024\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#435\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#435\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#166\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#166\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Jch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Jch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Cam16<T>, A>>","palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Jmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Jmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Cam16<T>, A>>","palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Jsh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Jsh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Cam16<T>, A>>","palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Qch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Qch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Cam16<T>, A>>","palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Qmh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Qmh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Cam16<T>, A>>","palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Qsh%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-From%3CAlpha%3CCam16%3CT%3E,+A%3E%3E-for-Alpha%3CCam16Qsh%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16.html\" title=\"struct palette::cam16::Cam16\">Cam16</a>&lt;T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Cam16<T>, A>>","palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CLms%3CM,+f32%3E,+f32%3E%3E-for-Alpha%3CLms%3CM,+f64%3E,+f64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#316-321\">source</a><a href=\"#impl-From%3CAlpha%3CLms%3CM,+f32%3E,+f32%3E%3E-for-Alpha%3CLms%3CM,+f64%3E,+f64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"type\" href=\"palette/lms/type.Lmsa.html\" title=\"type palette::lms::Lmsa\">Lmsa</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#318-320\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/lms/type.Lmsa.html\" title=\"type palette::lms::Lmsa\">Lmsa</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Lms<M, f32>, f32>>","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CLms%3CM,+f64%3E,+f64%3E%3E-for-Alpha%3CLms%3CM,+f32%3E,+f32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#330-335\">source</a><a href=\"#impl-From%3CAlpha%3CLms%3CM,+f64%3E,+f64%3E%3E-for-Alpha%3CLms%3CM,+f32%3E,+f32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"type\" href=\"palette/lms/type.Lmsa.html\" title=\"type palette::lms::Lmsa\">Lmsa</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#332-334\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"type\" href=\"palette/lms/type.Lmsa.html\" title=\"type palette::lms::Lmsa\">Lmsa</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Lms<M, f64>, f64>>","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CLinear%3CSrgb%3E,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CSrgb,+U%3E,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#386-395\">source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CLinear%3CSrgb%3E,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CSrgb,+U%3E,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>&gt;, T&gt;, T&gt;&gt; for <a class=\"type\" href=\"palette/type.Srgba.html\" title=\"type palette::Srgba\">Srgba</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt;,\n    <a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>&lt;Space = <a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>&gt; + <a class=\"trait\" href=\"palette/encoding/trait.FromLinear.html\" title=\"trait palette::encoding::FromLinear\">FromLinear</a>&lt;T, U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#392-394\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(lin_srgba: <a class=\"type\" href=\"palette/type.LinSrgba.html\" title=\"type palette::LinSrgba\">LinSrgba</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<Linear<Srgb>, T>, T>>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CSrgb,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CLinear%3CSrgb%3E,+U%3E,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#408-417\">source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CSrgb,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CLinear%3CSrgb%3E,+U%3E,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, T&gt;&gt; for <a class=\"type\" href=\"palette/type.LinSrgba.html\" title=\"type palette::LinSrgba\">LinSrgba</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/stimulus/trait.FromStimulus.html\" title=\"trait palette::stimulus::FromStimulus\">FromStimulus</a>&lt;T&gt;,\n    <a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>&lt;Space = <a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>&gt; + <a class=\"trait\" href=\"palette/encoding/trait.IntoLinear.html\" title=\"trait palette::encoding::IntoLinear\">IntoLinear</a>&lt;U, T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#414-416\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(srgba: <a class=\"type\" href=\"palette/type.Srgba.html\" title=\"type palette::Srgba\">Srgba</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<Srgb, T>, T>>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CC%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#791-798\">source</a><a href=\"#impl-From%3CC%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;C&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#792-797\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: C) -&gt; <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<C>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPreAlpha%3CC%3E%3E-for-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/blend/pre_alpha.rs.html#103-112\">source</a><a href=\"#impl-From%3CPreAlpha%3CC%3E%3E-for-Alpha%3CC,+%3CC+as+Premultiply%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/blend/trait.Premultiply.html#associatedtype.Scalar\" title=\"type palette::blend::Premultiply::Scalar\">Scalar</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/blend/trait.Premultiply.html\" title=\"trait palette::blend::Premultiply\">Premultiply</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/pre_alpha.rs.html#108-111\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PreAlpha<C>>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CC1%3E-for-Alpha%3CC2,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#194-206\">source</a><a href=\"#impl-FromColorUnclamped%3CC1%3E-for-Alpha%3CC2,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C1: <a class=\"trait\" href=\"palette/trait.WithAlpha.html\" title=\"trait palette::WithAlpha\">WithAlpha</a>&lt;T&gt;, C2, T&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;C1&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C2, T&gt;<div class=\"where\">where\n    C1::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a>: <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;C2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#198-205\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(other: C1) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<C1>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CAlpha%3CTc,+Ta%3E%3E-for-Alpha%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#847-865\">source</a><a href=\"#impl-FromIterator%3CAlpha%3CTc,+Ta%3E%3E-for-Alpha%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tc, Ta, C, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;Tc, Ta&gt;&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, A&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Tc&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Tc&gt;,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Ta&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#852-864\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;Tc, Ta&gt;&gt;&gt;(iter: T) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<Alpha<Tc, Ta>>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetHue-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#308-315\">source</a><a href=\"#impl-GetHue-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.GetHue.html\" title=\"trait palette::GetHue\">GetHue</a>, T&gt; <a class=\"trait\" href=\"palette/trait.GetHue.html\" title=\"trait palette::GetHue\">GetHue</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Hue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.GetHue.html#associatedtype.Hue\" class=\"associatedtype\">Hue</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.GetHue.html\" title=\"trait palette::GetHue\">GetHue</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.GetHue.html#associatedtype.Hue\" title=\"type palette::GetHue::Hue\">Hue</a></h4></section></summary><div class='docblock'>The kind of hue unit this color space uses. <a href=\"palette/trait.GetHue.html#associatedtype.Hue\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_hue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#312-314\">source</a><a href=\"#method.get_hue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.GetHue.html#tymethod.get_hue\" class=\"fn\">get_hue</a>(&amp;self) -&gt; C::<a class=\"associatedtype\" href=\"palette/trait.GetHue.html#associatedtype.Hue\" title=\"type palette::GetHue::Hue\">Hue</a></h4></section></summary><div class='docblock'>Calculate a hue if possible. <a href=\"palette/trait.GetHue.html#tymethod.get_hue\">Read more</a></div></details></div></details>","GetHue","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasBoolMask-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#445-451\">source</a><a href=\"#impl-HasBoolMask-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>,\n    T: <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&lt;Mask = C::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = &lt;C as <a class=\"trait\" href=\"palette/bool_mask/trait.HasBoolMask.html\" title=\"trait palette::bool_mask::HasBoolMask\">HasBoolMask</a>&gt;::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>The mask type to use for selecting <code>Self</code> values.</div></details></div></details>","HasBoolMask","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jch%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jch%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Iter.html\" title=\"struct palette::cam16::cam16_jch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jch%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jch%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Iter.html\" title=\"struct palette::cam16::cam16_jch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jch%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jch%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Iter.html\" title=\"struct palette::cam16::cam16_jch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jch%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jch%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Cam16Jch.html\" title=\"struct palette::cam16::cam16_jch::Cam16Jch\">Cam16Jch</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jch/struct.Iter.html\" title=\"struct palette::cam16::cam16_jch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#554-567\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jmh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jmh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jmh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jmh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jmh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jmh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jmh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jmh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Cam16Jmh.html\" title=\"struct palette::cam16::cam16_jmh::Cam16Jmh\">Cam16Jmh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#573-598\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jsh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jsh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jsh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jsh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jsh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jsh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Jsh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Jsh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Cam16Jsh.html\" title=\"struct palette::cam16::cam16_jsh::Cam16Jsh\">Cam16Jsh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_jsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_jsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#604-618\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Jsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qch%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qch%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Iter.html\" title=\"struct palette::cam16::cam16_qch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qch%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qch%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Iter.html\" title=\"struct palette::cam16::cam16_qch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qch%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qch%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Iter.html\" title=\"struct palette::cam16::cam16_qch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qch%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qch%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Cam16Qch.html\" title=\"struct palette::cam16::cam16_qch::Cam16Qch\">Cam16Qch</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qch/struct.Iter.html\" title=\"struct palette::cam16::cam16_qch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#624-637\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qmh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qmh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qmh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qmh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qmh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qmh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qmh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qmh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Cam16Qmh.html\" title=\"struct palette::cam16::cam16_qmh::Cam16Qmh\">Cam16Qmh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qmh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qmh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#643-657\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qsh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qsh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qsh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qsh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qsh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qsh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16Qsh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16Qsh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Cam16Qsh.html\" title=\"struct palette::cam16::cam16_qsh::Cam16Qsh\">Cam16Qsh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/cam16_qsh/struct.Iter.html\" title=\"struct palette::cam16::cam16_qsh::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/partial.rs.html#663-677\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::partial::Cam16Qsha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJab%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJab%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJabIter.html\" title=\"struct palette::cam16::Cam16UcsJabIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJab%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJab%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJabIter.html\" title=\"struct palette::cam16::Cam16UcsJabIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJab%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJab%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJabIter.html\" title=\"struct palette::cam16::Cam16UcsJabIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJab%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJab%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJabIter.html\" title=\"struct palette::cam16::Cam16UcsJabIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmhIter.html\" title=\"struct palette::cam16::Cam16UcsJmhIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmhIter.html\" title=\"struct palette::cam16::Cam16UcsJmhIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmhIter.html\" title=\"struct palette::cam16::Cam16UcsJmhIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CCam16UcsJmh%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmh.html\" title=\"struct palette::cam16::Cam16UcsJmh\">Cam16UcsJmh</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJmhIter.html\" title=\"struct palette::cam16::Cam16UcsJmhIter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jmh.rs.html#283\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::cam16::ucs_jmh::Cam16UcsJmha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsl%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsl%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsl/struct.Iter.html\" title=\"struct palette::hsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsl%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsl%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsl/struct.Iter.html\" title=\"struct palette::hsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsl%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsl%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsl/struct.Iter.html\" title=\"struct palette::hsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsl%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsl%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsl/struct.Iter.html\" title=\"struct palette::hsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#492\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsluv/struct.Iter.html\" title=\"struct palette::hsluv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsluv/struct.Iter.html\" title=\"struct palette::hsluv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsluv/struct.Iter.html\" title=\"struct palette::hsluv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsluv%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsluv/struct.Iter.html\" title=\"struct palette::hsluv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#218\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsv%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsv%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsv/struct.Iter.html\" title=\"struct palette::hsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsv%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsv%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsv/struct.Iter.html\" title=\"struct palette::hsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsv%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsv%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsv/struct.Iter.html\" title=\"struct palette::hsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHsv%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHsv%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hsv/struct.Iter.html\" title=\"struct palette::hsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHwb%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHwb%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hwb/struct.Iter.html\" title=\"struct palette::hwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHwb%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHwb%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hwb/struct.Iter.html\" title=\"struct palette::hwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHwb%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHwb%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hwb/struct.Iter.html\" title=\"struct palette::hwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CHwb%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CHwb%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/hwb/struct.Iter.html\" title=\"struct palette::hwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#324\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLab%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLab%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lab/struct.Iter.html\" title=\"struct palette::lab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLab%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLab%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lab/struct.Iter.html\" title=\"struct palette::lab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLab%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLab%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lab/struct.Iter.html\" title=\"struct palette::lab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLab%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLab%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lab/struct.Iter.html\" title=\"struct palette::lab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#351\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLch%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLch%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lch/struct.Iter.html\" title=\"struct palette::lch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLch%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLch%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lch/struct.Iter.html\" title=\"struct palette::lch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLch%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLch%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lch/struct.Iter.html\" title=\"struct palette::lch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLch%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLch%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lch/struct.Iter.html\" title=\"struct palette::lch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#297\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lchuv/struct.Iter.html\" title=\"struct palette::lchuv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lchuv/struct.Iter.html\" title=\"struct palette::lchuv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lchuv/struct.Iter.html\" title=\"struct palette::lchuv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLchuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lchuv/struct.Iter.html\" title=\"struct palette::lchuv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#228\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLms%3CM,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLms%3CM,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Iter.html\" title=\"struct palette::lms::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, M&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLms%3CM,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLms%3CM,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Iter.html\" title=\"struct palette::lms::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, M&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLms%3CM,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLms%3CM,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Iter.html\" title=\"struct palette::lms::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, M&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLms%3CM,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLms%3CM,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Lms.html\" title=\"struct palette::lms::Lms\">Lms</a>&lt;M, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/lms/struct.Iter.html\" title=\"struct palette::lms::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, M&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lms/lms.rs.html#376\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuma%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuma%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuma%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuma%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuma%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuma%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuma%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuma%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Iter.html\" title=\"struct palette::luma::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#757\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuv%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuv%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luv/struct.Iter.html\" title=\"struct palette::luv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuv%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuv%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luv/struct.Iter.html\" title=\"struct palette::luv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuv%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuv%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luv/struct.Iter.html\" title=\"struct palette::luv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CLuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CLuv%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/luv/struct.Iter.html\" title=\"struct palette::luv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#272\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsl%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsl%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsl/struct.Iter.html\" title=\"struct palette::okhsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsl%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsl%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsl/struct.Iter.html\" title=\"struct palette::okhsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsl%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsl%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsl/struct.Iter.html\" title=\"struct palette::okhsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsl%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsl%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsl.html\" title=\"struct palette::Okhsl\">Okhsl</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsl/struct.Iter.html\" title=\"struct palette::okhsl::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsl/properties.rs.html#41\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsl::alpha::Okhsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsv%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsv%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsv/struct.Iter.html\" title=\"struct palette::okhsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsv%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsv%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsv/struct.Iter.html\" title=\"struct palette::okhsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsv%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsv%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsv/struct.Iter.html\" title=\"struct palette::okhsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhsv%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhsv%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhsv.html\" title=\"struct palette::Okhsv\">Okhsv</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhsv/struct.Iter.html\" title=\"struct palette::okhsv::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhsv/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhsv::alpha::Okhsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhwb%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhwb%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhwb/struct.Iter.html\" title=\"struct palette::okhwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhwb%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhwb%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhwb/struct.Iter.html\" title=\"struct palette::okhwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhwb%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhwb%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhwb/struct.Iter.html\" title=\"struct palette::okhwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COkhwb%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COkhwb%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Okhwb.html\" title=\"struct palette::Okhwb\">Okhwb</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/okhwb/struct.Iter.html\" title=\"struct palette::okhwb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/okhwb/properties.rs.html#27\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::okhwb::alpha::Okhwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklab%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklab%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklab/struct.Iter.html\" title=\"struct palette::oklab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklab%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklab%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklab/struct.Iter.html\" title=\"struct palette::oklab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklab%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklab%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklab/struct.Iter.html\" title=\"struct palette::oklab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklab%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklab%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklab/struct.Iter.html\" title=\"struct palette::oklab::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#56\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklch%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklch%3C%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklch/struct.Iter.html\" title=\"struct palette::oklch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklch%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklch%3C%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;&amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklch/struct.Iter.html\" title=\"struct palette::oklch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklch%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklch%3C%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklch/struct.Iter.html\" title=\"struct palette::oklch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3COklch%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3COklch%3CVec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/oklch/struct.Iter.html\" title=\"struct palette::oklch::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch/properties.rs.html#36\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::oklch::alpha::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CRgb%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CRgb%3CS,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Iter.html\" title=\"struct palette::rgb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CRgb%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CRgb%3CS,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Iter.html\" title=\"struct palette::rgb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CRgb%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CRgb%3CS,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Iter.html\" title=\"struct palette::rgb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CRgb%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CRgb%3CS,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Iter.html\" title=\"struct palette::rgb::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, S&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#1027\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CXyz%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CXyz%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/xyz/struct.Iter.html\" title=\"struct palette::xyz::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CXyz%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CXyz%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/xyz/struct.Iter.html\" title=\"struct palette::xyz::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CXyz%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CXyz%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/xyz/struct.Iter.html\" title=\"struct palette::xyz::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CXyz%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CXyz%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/xyz/struct.Iter.html\" title=\"struct palette::xyz::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#499\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CYxy%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CYxy%3CWp,+%26%5BT%5D%3E,+%26%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/yxy/struct.Iter.html\" title=\"struct palette::yxy::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CYxy%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CYxy%3CWp,+%26mut+%5BT%5D%3E,+%26mut+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;, &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[T]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/yxy/struct.Iter.html\" title=\"struct palette::yxy::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'a, T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CYxy%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CYxy%3CWp,+%5BT;+N%5D%3E,+%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; N]</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/yxy/struct.Iter.html\" title=\"struct palette::yxy::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Alpha%3CYxy%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#impl-IntoIterator-for-Alpha%3CYxy%3CWp,+Vec%3CT%3E%3E,+Vec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Wp, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"palette/alpha/struct.Iter.html\" title=\"struct palette::alpha::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"palette/yxy/struct.Iter.html\" title=\"struct palette::yxy::Iter\">Iter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;, Wp&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#270\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IsWithinBounds-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#397-409\">source</a><a href=\"#impl-IsWithinBounds-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/trait.IsWithinBounds.html\" title=\"trait palette::IsWithinBounds\">IsWithinBounds</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.IsWithinBounds.html\" title=\"trait palette::IsWithinBounds\">IsWithinBounds</a>,\n    T: <a class=\"trait\" href=\"palette/stimulus/trait.Stimulus.html\" title=\"trait palette::stimulus::Stimulus\">Stimulus</a> + <a class=\"trait\" href=\"palette/num/trait.PartialCmp.html\" title=\"trait palette::num::PartialCmp\">PartialCmp</a> + <a class=\"trait\" href=\"palette/trait.IsWithinBounds.html\" title=\"trait palette::IsWithinBounds\">IsWithinBounds</a>&lt;Mask = C::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>&gt;,\n    C::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Output = C::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_within_bounds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#404-408\">source</a><a href=\"#method.is_within_bounds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.IsWithinBounds.html#tymethod.is_within_bounds\" class=\"fn\">is_within_bounds</a>(&amp;self) -&gt; C::<a class=\"associatedtype\" href=\"palette/bool_mask/trait.HasBoolMask.html#associatedtype.Mask\" title=\"type palette::bool_mask::HasBoolMask::Mask\">Mask</a></h4></section></summary><div class='docblock'>Check if the color’s components are within the expected range bounds. <a href=\"palette/trait.IsWithinBounds.html#tymethod.is_within_bounds\">Read more</a></div></details></div></details>","IsWithinBounds","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lighten-for-Alpha%3CC,+%3CC+as+Lighten%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#274-292\">source</a><a href=\"#impl-Lighten-for-Alpha%3CC,+%3CC+as+Lighten%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.Lighten.html\" title=\"trait palette::Lighten\">Lighten</a>&gt; <a class=\"trait\" href=\"palette/trait.Lighten.html\" title=\"trait palette::Lighten\">Lighten</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Lighten.html#associatedtype.Scalar\" title=\"type palette::Lighten::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Lighten.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.Lighten.html\" title=\"trait palette::Lighten\">Lighten</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.Lighten.html#associatedtype.Scalar\" title=\"type palette::Lighten::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the lighten modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#278-283\">source</a><a href=\"#method.lighten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Lighten.html#tymethod.lighten\" class=\"fn\">lighten</a>(self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.Lighten.html#associatedtype.Scalar\" title=\"type palette::Lighten::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Scale the color towards the maximum lightness by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Lighten.html#tymethod.lighten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#286-291\">source</a><a href=\"#method.lighten_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Lighten.html#tymethod.lighten_fixed\" class=\"fn\">lighten_fixed</a>(self, amount: C::<a class=\"associatedtype\" href=\"palette/trait.Lighten.html#associatedtype.Scalar\" title=\"type palette::Lighten::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Lighten the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Lighten.html#tymethod.lighten_fixed\">Read more</a></div></details></div></details>","Lighten","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LightenAssign-for-Alpha%3CC,+%3CC+as+LightenAssign%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#294-306\">source</a><a href=\"#impl-LightenAssign-for-Alpha%3CC,+%3CC+as+LightenAssign%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.LightenAssign.html\" title=\"trait palette::LightenAssign\">LightenAssign</a>&gt; <a class=\"trait\" href=\"palette/trait.LightenAssign.html\" title=\"trait palette::LightenAssign\">LightenAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.LightenAssign.html#associatedtype.Scalar\" title=\"type palette::LightenAssign::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.LightenAssign.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.LightenAssign.html\" title=\"trait palette::LightenAssign\">LightenAssign</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.LightenAssign.html#associatedtype.Scalar\" title=\"type palette::LightenAssign::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the lighten modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#298-300\">source</a><a href=\"#method.lighten_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_assign\" class=\"fn\">lighten_assign</a>(&amp;mut self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.LightenAssign.html#associatedtype.Scalar\" title=\"type palette::LightenAssign::Scalar\">Scalar</a>)</h4></section></summary><div class='docblock'>Scale the color towards the maximum lightness by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_assign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten_fixed_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#303-305\">source</a><a href=\"#method.lighten_fixed_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_fixed_assign\" class=\"fn\">lighten_fixed_assign</a>(&amp;mut self, amount: C::<a class=\"associatedtype\" href=\"palette/trait.LightenAssign.html#associatedtype.Scalar\" title=\"type palette::LightenAssign::Scalar\">Scalar</a>)</h4></section></summary><div class='docblock'>Lighten the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.LightenAssign.html#tymethod.lighten_fixed_assign\">Read more</a></div></details></div></details>","LightenAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#800-815\">source</a><a href=\"#impl-LowerHex-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#805-814\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mix-for-Alpha%3CC,+%3CC+as+Mix%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#240-256\">source</a><a href=\"#impl-Mix-for-Alpha%3CC,+%3CC+as+Mix%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"palette/trait.Mix.html\" title=\"trait palette::Mix\">Mix</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.Mix.html\" title=\"trait palette::Mix\">Mix</a>,\n    C::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a>: <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.One.html\" title=\"trait palette::num::One\">One</a> + <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Mix.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.Mix.html\" title=\"trait palette::Mix\">Mix</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the mixing factor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#248-255\">source</a><a href=\"#method.mix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Mix.html#tymethod.mix\" class=\"fn\">mix</a>(self, other: Self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Mix the color with an other color, by <code>factor</code>. <a href=\"palette/trait.Mix.html#tymethod.mix\">Read more</a></div></details></div></details>","Mix","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MixAssign-for-Alpha%3CC,+%3CC+as+MixAssign%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#258-272\">source</a><a href=\"#impl-MixAssign-for-Alpha%3CC,+%3CC+as+MixAssign%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"palette/trait.MixAssign.html\" title=\"trait palette::MixAssign\">MixAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.MixAssign.html#associatedtype.Scalar\" title=\"type palette::MixAssign::Scalar\">Scalar</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.MixAssign.html\" title=\"trait palette::MixAssign\">MixAssign</a>,\n    C::<a class=\"associatedtype\" href=\"palette/trait.MixAssign.html#associatedtype.Scalar\" title=\"type palette::MixAssign::Scalar\">Scalar</a>: <a class=\"trait\" href=\"palette/num/trait.Zero.html\" title=\"trait palette::num::Zero\">Zero</a> + <a class=\"trait\" href=\"palette/num/trait.One.html\" title=\"trait palette::num::One\">One</a> + <a class=\"trait\" href=\"palette/num/trait.Clamp.html\" title=\"trait palette::num::Clamp\">Clamp</a> + <a class=\"trait\" href=\"palette/num/trait.Arithmetics.html\" title=\"trait palette::num::Arithmetics\">Arithmetics</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.MixAssign.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.MixAssign.html\" title=\"trait palette::MixAssign\">MixAssign</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.MixAssign.html#associatedtype.Scalar\" title=\"type palette::MixAssign::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the mixing factor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mix_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#266-271\">source</a><a href=\"#method.mix_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.MixAssign.html#tymethod.mix_assign\" class=\"fn\">mix_assign</a>(&amp;mut self, other: Self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.MixAssign.html#associatedtype.Scalar\" title=\"type palette::MixAssign::Scalar\">Scalar</a>)</h4></section></summary><div class='docblock'>Mix the color with an other color, by <code>factor</code>. <a href=\"palette/trait.MixAssign.html#tymethod.mix_assign\">Read more</a></div></details></div></details>","MixAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#700-713\">source</a><a href=\"#impl-Mul%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#707-712\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#685-698\">source</a><a href=\"#impl-Mul-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#692-697\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#726-735\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#731-734\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#715-724\">source</a><a href=\"#impl-MulAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#720-723\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#177-185\">source</a><a href=\"#impl-PartialEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#182-184\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#482-502\">source</a><a href=\"#impl-RelativeEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; RelativeEq for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: RelativeEq&lt;Epsilon = T::Epsilon&gt;,\n    T: RelativeEq,\n    T::Epsilon: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#488-490\">source</a><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_max_relative</a>() -&gt; Self::Epsilon</h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#492-501\">source</a><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;,\n    epsilon: Self::Epsilon,\n    max_relative: Self::Epsilon,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::Epsilon,\n    max_relative: Self::Epsilon,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>RelativeEq::relative_eq</code>].</div></details></div></details>","RelativeEq","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#1015-1021\">source</a><a href=\"#impl-SampleUniform-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"palette/alpha/struct.UniformAlpha.html\" title=\"struct palette::alpha::UniformAlpha\">UniformAlpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturate-for-Alpha%3CC,+%3CC+as+Saturate%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#363-381\">source</a><a href=\"#impl-Saturate-for-Alpha%3CC,+%3CC+as+Saturate%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.Saturate.html\" title=\"trait palette::Saturate\">Saturate</a>&gt; <a class=\"trait\" href=\"palette/trait.Saturate.html\" title=\"trait palette::Saturate\">Saturate</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Saturate.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.Saturate.html\" title=\"trait palette::Saturate\">Saturate</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the saturation modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#367-372\">source</a><a href=\"#method.saturate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Saturate.html#tymethod.saturate\" class=\"fn\">saturate</a>(self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Scale the color towards the maximum saturation by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Saturate.html#tymethod.saturate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturate_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#375-380\">source</a><a href=\"#method.saturate_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Saturate.html#tymethod.saturate_fixed\" class=\"fn\">saturate_fixed</a>(self, amount: C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Increase the saturation by <code>amount</code>, a value ranging from <code>0.0</code> to\n<code>1.0</code>. <a href=\"palette/trait.Saturate.html#tymethod.saturate_fixed\">Read more</a></div></details></div></details>","Saturate","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturateAssign-for-Alpha%3CC,+%3CC+as+SaturateAssign%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#383-395\">source</a><a href=\"#impl-SaturateAssign-for-Alpha%3CC,+%3CC+as+SaturateAssign%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.SaturateAssign.html\" title=\"trait palette::SaturateAssign\">SaturateAssign</a>&gt; <a class=\"trait\" href=\"palette/trait.SaturateAssign.html\" title=\"trait palette::SaturateAssign\">SaturateAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.SaturateAssign.html#associatedtype.Scalar\" title=\"type palette::SaturateAssign::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.SaturateAssign.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.SaturateAssign.html\" title=\"trait palette::SaturateAssign\">SaturateAssign</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.SaturateAssign.html#associatedtype.Scalar\" title=\"type palette::SaturateAssign::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the saturation modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturate_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#387-389\">source</a><a href=\"#method.saturate_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.SaturateAssign.html#tymethod.saturate_assign\" class=\"fn\">saturate_assign</a>(&amp;mut self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.SaturateAssign.html#associatedtype.Scalar\" title=\"type palette::SaturateAssign::Scalar\">Scalar</a>)</h4></section></summary><div class='docblock'>Scale the color towards the maximum saturation by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.SaturateAssign.html#tymethod.saturate_assign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturate_fixed_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#392-394\">source</a><a href=\"#method.saturate_fixed_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.SaturateAssign.html#tymethod.saturate_fixed_assign\" class=\"fn\">saturate_fixed_assign</a>(&amp;mut self, amount: C::<a class=\"associatedtype\" href=\"palette/trait.SaturateAssign.html#associatedtype.Scalar\" title=\"type palette::SaturateAssign::Scalar\">Scalar</a>)</h4></section></summary><div class='docblock'>Increase the saturation by <code>amount</code>, a value ranging from <code>0.0</code> to\n<code>1.0</code>. <a href=\"palette/trait.SaturateAssign.html#tymethod.saturate_fixed_assign\">Read more</a></div></details></div></details>","SaturateAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#588-601\">source</a><a href=\"#impl-SaturatingAdd%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#595-600\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the sum of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingAdd<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#573-586\">source</a><a href=\"#impl-SaturatingAdd-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>,\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"palette/num/trait.SaturatingAdd.html\" title=\"trait palette::num::SaturatingAdd\">SaturatingAdd</a>&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#580-585\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingAdd.html#associatedtype.Output\" title=\"type palette::num::SaturatingAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the sum of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingAdd","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#670-683\">source</a><a href=\"#impl-SaturatingSub%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#677-682\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the difference of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingSub<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#655-668\">source</a><a href=\"#impl-SaturatingSub-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>,\n    T: <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"palette/num/trait.SaturatingSub.html\" title=\"trait palette::num::SaturatingSub\">SaturatingSub</a>&gt;::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#662-667\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/num/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"palette/num/trait.SaturatingSub.html#associatedtype.Output\" title=\"type palette::num::SaturatingSub::Output\">Output</a></h4></section></summary><div class='docblock'>Returns the difference of <code>self</code> and <code>other</code>, but saturates instead of overflowing.</div></details></div></details>","SaturatingSub","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#949-963\">source</a><a href=\"#impl-Serialize-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#954-962\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.208/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SetHue%3CH%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#328-336\">source</a><a href=\"#impl-SetHue%3CH%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, H&gt; <a class=\"trait\" href=\"palette/trait.SetHue.html\" title=\"trait palette::SetHue\">SetHue</a>&lt;H&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.SetHue.html\" title=\"trait palette::SetHue\">SetHue</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_hue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#333-335\">source</a><a href=\"#method.set_hue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.SetHue.html#tymethod.set_hue\" class=\"fn\">set_hue</a>(&amp;mut self, hue: H)</h4></section></summary><div class='docblock'>Change the hue to a specific value.</div></details></div></details>","SetHue<H>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShiftHue-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#338-349\">source</a><a href=\"#impl-ShiftHue-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/trait.ShiftHue.html\" title=\"trait palette::ShiftHue\">ShiftHue</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.ShiftHue.html\" title=\"trait palette::ShiftHue\">ShiftHue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.ShiftHue.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.ShiftHue.html\" title=\"trait palette::ShiftHue\">ShiftHue</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.ShiftHue.html#associatedtype.Scalar\" title=\"type palette::ShiftHue::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the hue modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_hue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#345-348\">source</a><a href=\"#method.shift_hue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.ShiftHue.html#tymethod.shift_hue\" class=\"fn\">shift_hue</a>(self, amount: Self::<a class=\"associatedtype\" href=\"palette/trait.ShiftHue.html#associatedtype.Scalar\" title=\"type palette::ShiftHue::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Return a copy of <code>self</code> with the hue shifted by <code>amount</code>.</div></details></div></details>","ShiftHue","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShiftHueAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#351-361\">source</a><a href=\"#impl-ShiftHueAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"palette/trait.ShiftHueAssign.html\" title=\"trait palette::ShiftHueAssign\">ShiftHueAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.ShiftHueAssign.html\" title=\"trait palette::ShiftHueAssign\">ShiftHueAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.ShiftHueAssign.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.ShiftHueAssign.html\" title=\"trait palette::ShiftHueAssign\">ShiftHueAssign</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.ShiftHueAssign.html#associatedtype.Scalar\" title=\"type palette::ShiftHueAssign::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the hue modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_hue_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#358-360\">source</a><a href=\"#method.shift_hue_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.ShiftHueAssign.html#tymethod.shift_hue_assign\" class=\"fn\">shift_hue_assign</a>(&amp;mut self, amount: Self::<a class=\"associatedtype\" href=\"palette/trait.ShiftHueAssign.html#associatedtype.Scalar\" title=\"type palette::ShiftHueAssign::Scalar\">Scalar</a>)</h4></section></summary><div class='docblock'>Shifts the hue by <code>amount</code>.</div></details></div></details>","ShiftHueAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#618-631\">source</a><a href=\"#impl-Sub%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#625-630\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#603-616\">source</a><a href=\"#impl-Sub-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#610-615\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#644-653\">source</a><a href=\"#impl-SubAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#649-652\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<T>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#633-642\">source</a><a href=\"#impl-SubAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#638-641\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tetradic-for-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#274\">source</a><a href=\"#impl-Tetradic-for-Alpha%3CCam16UcsJab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/cam16/struct.Cam16UcsJab.html\" title=\"struct palette::cam16::Cam16UcsJab\">Cam16UcsJab</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.tetradic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/cam16/ucs_jab.rs.html#274\">source</a><a href=\"#method.tetradic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\" class=\"fn\">tetradic</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(Self, Self, Self)</a></h4></section></summary><div class='docblock'>Return the three additional colors of a tetradic color scheme. <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\">Read more</a></div></details></div></details>","Tetradic","palette::cam16::ucs_jab::Cam16UcsJaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tetradic-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#234\">source</a><a href=\"#impl-Tetradic-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.tetradic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#234\">source</a><a href=\"#method.tetradic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\" class=\"fn\">tetradic</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(Self, Self, Self)</a></h4></section></summary><div class='docblock'>Return the three additional colors of a tetradic color scheme. <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\">Read more</a></div></details></div></details>","Tetradic","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tetradic-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#236\">source</a><a href=\"#impl-Tetradic-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.tetradic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#236\">source</a><a href=\"#method.tetradic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\" class=\"fn\">tetradic</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(Self, Self, Self)</a></h4></section></summary><div class='docblock'>Return the three additional colors of a tetradic color scheme. <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\">Read more</a></div></details></div></details>","Tetradic","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tetradic-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#36\">source</a><a href=\"#impl-Tetradic-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;: <a class=\"trait\" href=\"palette/color_theory/trait.Tetradic.html\" title=\"trait palette::color_theory::Tetradic\">Tetradic</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.tetradic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab/properties.rs.html#36\">source</a><a href=\"#method.tetradic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\" class=\"fn\">tetradic</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(Self, Self, Self)</a></h4></section></summary><div class='docblock'>Return the three additional colors of a tetradic color scheme. <a href=\"palette/color_theory/trait.Tetradic.html#tymethod.tetradic\">Read more</a></div></details></div></details>","Tetradic","palette::oklab::alpha::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#505-519\">source</a><a href=\"#impl-UlpsEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; UlpsEq for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: UlpsEq&lt;Epsilon = T::Epsilon&gt;,\n    T: UlpsEq,\n    T::Epsilon: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#511-513\">source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#515-518\">source</a><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ulps_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;,\n    epsilon: Self::Epsilon,\n    max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::Epsilon, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>UlpsEq::ulps_eq</code>].</div></details></div></details>","UlpsEq","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#817-832\">source</a><a href=\"#impl-UpperHex-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#822-831\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WithAlpha%3CA%3E-for-Alpha%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#208-224\">source</a><a href=\"#impl-WithAlpha%3CA%3E-for-Alpha%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A&gt; <a class=\"trait\" href=\"palette/trait.WithAlpha.html\" title=\"trait palette::WithAlpha\">WithAlpha</a>&lt;A&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Color\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Color\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.WithAlpha.html#associatedtype.Color\" class=\"associatedtype\">Color</a> = C</h4></section></summary><div class='docblock'>The opaque color type, without any transparency. <a href=\"palette/trait.WithAlpha.html#associatedtype.Color\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.WithAlpha\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.WithAlpha\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" class=\"associatedtype\">WithAlpha</a> = <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, A&gt;</h4></section></summary><div class='docblock'>The color type with transparency applied. <a href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#212-215\">source</a><a href=\"#method.with_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.with_alpha\" class=\"fn\">with_alpha</a>(self, alpha: A) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" title=\"type palette::WithAlpha::WithAlpha\">WithAlpha</a></h4></section></summary><div class='docblock'>Transforms the color into a transparent color with the provided\nalpha value. If <code>Self</code> already has a transparency, it is\noverwritten. <a href=\"palette/trait.WithAlpha.html#tymethod.with_alpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#217-219\">source</a><a href=\"#method.without_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.without_alpha\" class=\"fn\">without_alpha</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a></h4></section></summary><div class='docblock'>Removes the transparency from the color. If <code>Self::Color</code> has\nan internal transparency field, that field will be set to\n<code>A::max_intensity()</code> to make it opaque. <a href=\"palette/trait.WithAlpha.html#tymethod.without_alpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#221-223\">source</a><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.split\" class=\"fn\">split</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a>, A)</h4></section></summary><div class='docblock'>Splits the color into separate color and transparency values. <a href=\"palette/trait.WithAlpha.html#tymethod.split\">Read more</a></div></details></div></details>","WithAlpha<A>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WithHue%3CH%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#317-326\">source</a><a href=\"#impl-WithHue%3CH%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, H&gt; <a class=\"trait\" href=\"palette/trait.WithHue.html\" title=\"trait palette::WithHue\">WithHue</a>&lt;H&gt; for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.WithHue.html\" title=\"trait palette::WithHue\">WithHue</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#322-325\">source</a><a href=\"#method.with_hue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithHue.html#tymethod.with_hue\" class=\"fn\">with_hue</a>(self, hue: H) -&gt; Self</h4></section></summary><div class='docblock'>Return a copy of <code>self</code> with a specific hue.</div></details></div></details>","WithHue<H>","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#1068-1073\">source</a><a href=\"#impl-Zeroable-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; Zeroable for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: Zeroable,\n    T: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.80.1/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<section id=\"impl-Copy-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#129\">source</a><a href=\"#impl-Copy-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section>","Copy","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<section id=\"impl-Eq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#187-192\">source</a><a href=\"#impl-Eq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<section id=\"impl-Pod-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#1081-1086\">source</a><a href=\"#impl-Pod-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; Pod for <a class=\"struct\" href=\"palette/alpha/struct.Alpha.html\" title=\"struct palette::alpha::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: Pod,\n    C: Pod + <a class=\"trait\" href=\"palette/cast/trait.ArrayCast.html\" title=\"trait palette::cast::ArrayCast\">ArrayCast</a>,</div></h3></section>","Pod","palette::cam16::full::Cam16a","palette::cam16::partial::Cam16Jcha","palette::cam16::partial::Cam16Jmha","palette::cam16::partial::Cam16Jsha","palette::cam16::partial::Cam16Qcha","palette::cam16::partial::Cam16Qmha","palette::cam16::partial::Cam16Qsha","palette::cam16::ucs_jab::Cam16UcsJaba","palette::cam16::ucs_jmh::Cam16UcsJmha","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::lms::lms::Lmsa","palette::lms::VonKriesLmsa","palette::lms::BradfordLmsa","palette::luma::luma::Lumaa","palette::luv::Luva","palette::okhsl::alpha::Okhsla","palette::okhsv::alpha::Okhsva","palette::okhwb::alpha::Okhwba","palette::oklab::alpha::Oklaba","palette::oklch::alpha::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()